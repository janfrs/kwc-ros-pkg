SubDir exec_trex ;

if ! $(exec_trex_READY) {

   	on exec_trex {
		LINKFLAGS = $(LINKFLAGS) -Wl,-rpath,$(PLASMA_HOME)/build/lib ;
		LINKFLAGS = $(LINKFLAS) $(PKG_LINK_FLAGS) ;

		# Include directories for ROS. Can obtain from rospack export/cpp/cflags roscpp
		SubDirHdrs $(ROS_ROOT) core roscpp include ;
   		SubDirHdrs $(ROS_ROOT) util rosthread include ;

   		SubDirHdrs $(ROS_ROOT) util rostime include ;
   		SubDirHdrs $(ROS_ROOT) core rostools msg cpp ;
   		SubDirHdrs $(ROS_ROOT) 3rdparty xmlrpc++ src ;
   		SubDirHdrs $(ROS_ROOT) std_msgs msg cpp ;
		SubDirHdrs $(ROS_ROOT) std_srvs srv cpp ;		
	
		SubDirHdrs $(PR_ROOT) 3rdparty player player include player-2.2 ;
		SubDirHdrs $(PR_ROOT) util transforms rosTF include ;
		SubDirHdrs $(PR_ROOT) util transforms libTF include ;
		SubDirHdrs $(PR_ROOT) 3rdparty newmat10 newmat ;
		SubDirHdrs $(PR_ROOT) util transforms namelookup srv cpp ;
   		SubDirHdrs $(PR_ROOT) util transforms namelookup include ;

		# GNU Library include directories
		SubDirHdrs / usr include gtk-2.0 ;
		SubDirHdrs / usr include glib-2.0 ;
		SubDirHdrs / usr lib glib-2.0 include ;

		# PLASMA & TREX libraries found here
		LINKFLAGS = $(LINKFLAGS) -Wl,-rpath,$(PLASMA_HOME)/build/lib ;
	}

	ModuleMain exec_trex : Executive.cc RCSVelAdapter.cc RCSArmAdapter.cc ROSNode.cc Logger.cc
	LogClock.cc CalcCommandConstraintPlayback.cc CalcGlobalPathConstraintPlayback.cc 
	CalcCommandConstraint.cc Playback.cc CalcGlobalPathConstraint.cc WavefrontPlanner.cc 
	GoalManager.cc map_helpers.cc ExecDefs.cc Components.cc pr2.model.o : TREX : exec_trex ;
	
	Depends exec_trex : exec_inputs ;
	ModuleMain logger : MessageLogger.cc ExecDefs.o : TREX : logger ;

 	# Input file for exec
	local TestInputs = 
		pr2.exec.nddl
		pr2.wpc.nddl
		pr2.sim.nddl
		clean.0.exec.nddl
		clean.0.wpc.nddl
		clean.0.rcsarm.nddl
		wpc.0.wpc.nddl
	;

	local file ;
 	for file in [ FGristFiles $(TestInputs) ] {
  		local xml = $(file:S=.xml:G=) ;
		LocalDepends exec_inputs : $(xml) ;
  		NddlParser $(xml) : $(file) ;
 	}
 
 	# Build the model - generates .cc and .hh files from .nddl
	NddlModel pr2.model.nddl : System ;

	# Build all
	Depends exec_all : exec_trex rcs exec_listener logger exec_inputs ;
}
