SubDir exec_trex ;

if ! $(exec_trex_READY) {

   	on exec_trex {
		SUBDIRC++FLAGS = $(SUBDIRC++FLAGS) $(PKG_CPP_FLAGS) ;
		LINKFLAGS = $(LINKFLAGS) -Wl,-rpath,$(PLASMA_HOME)/build/lib ;
		LINKFLAGS = $(LINKFLAGS) $(PKG_LINK_FLAGS) ;

		# PLASMA & TREX libraries found here
		LINKFLAGS = $(LINKFLAGS) -Wl,-rpath,$(PLASMA_HOME)/build/lib ;	
	}

	ModuleMain exec_trex : Executive.cc ROSAdapter.cc
	ROSNode.cc Logger.cc LogClock.cc CalcCommandConstraintPlayback.cc
	CalcGlobalPathConstraintPlayback.cc CalcCommandConstraint.cc Playback.cc
	CalcGlobalPathConstraint.cc CalcArmInverseKinematicsConstraint.cc
	CalcInterpolatedEndEffectorPosConstraint.cc OrienteeringSolver.cc
	CalcGraspPositionConstraint.cc CalcAngleDiffConstraint.cc CalcDistanceConstraint.cc GoalManager.cc
	WavefrontPlanner.cc map_helpers.cc ExecDefs.cc Components.cc pr2.model.cc
	: TREX : exec_trex ;
	
	Depends exec_trex : exec_inputs ;
	ModuleMain logger : MessageLogger.cc ExecDefs.cc : TREX : logger ;

	# Test Targets
 	RunModuleMain run-exec-module-tests : exec-module-tests ;
	ModuleMain exec-module-tests : module-tests.cc CalcDistanceConstraint.cc : TREX : exec_trex_module-tests ;
	ModuleMain testCalcArmInverseKinematicsConstraint :
	testCalcArmInverseKinematicsConstraint.cc CalcArmInverseKinematicsConstraint.cc Logger.cc LogClock.cc : TREX : testCalcArmInverseKinematicsConstraint ;


 	# Input file for exec
	local TestInputs = 
		clean.0.exec.nddl
		clean.0.wpc.nddl
		clean.0.ac.nddl
		wpc.0.exec.nddl
		wpc.0.wpc.nddl
		wpc.0.ac.nddl
		wpc.0.sim.nddl
		wpc.1.exec.nddl
		wpc.1.wpc.nddl
		wpc.1.ac.nddl
		wpc.1.sim.nddl
		handwave.exec.nddl
		handwave.wpc.nddl
		handwave.ac.nddl
		handwave.sim.nddl
		grasp.0.exec.nddl
		grasp.0.wpc.nddl
		grasp.0.ac.nddl
	;

	local file ;
 	for file in [ FGristFiles $(TestInputs) ] {
  		local xml = $(file:S=.xml:G=) ;
		LocalDepends exec_inputs : $(xml) ;
  		NddlParser $(xml) : $(file) ;
 	}
 
 	# Build the model - generates .cc and .hh files from .nddl
	NddlModel pr2.model.nddl : System ;

	# Build all
	Depends exec_all : exec_trex logger exec_inputs ;
}
