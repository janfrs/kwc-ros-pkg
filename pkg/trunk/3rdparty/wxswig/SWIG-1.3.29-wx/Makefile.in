#######################################################################
# $Header: /cvsroot/swig/SWIG/Makefile.in,v 1.103 2006/03/10 22:54:02 wsfulton Exp $
#######################################################################

prefix      = @prefix@
exec_prefix = @exec_prefix@
srcdir      = @srcdir@

##############################################################################
# Compiler and system configuration
##############################################################################

SHELL       = /bin/sh
SWIG_LIB    = @swig_lib@
BIN_DIR     = @bindir@
DATA_DIR    = @datadir@/$(SWIG_LIB)
TARGET_NOEXE= swig
TARGET      = $(TARGET_NOEXE)@EXEEXT@
SOURCE      = Source

swig: libfiles source

source:
	@cd $(SOURCE) && $(MAKE)

libfiles: $(srcdir)/Lib/swigwarn.swg

.PHONY: source libfiles

#####################################################################
# All the languages SWIG speaks (when it wants to)
#####################################################################

skip-tcl	= test -n "@SKIP_TCL@"
skip-perl5	= test -n "@SKIP_PERL5@"
skip-python	= test -n "@SKIP_PYTHON@"
skip-java	= test -n "@SKIP_JAVA@"
skip-guilescm   = test -n "@SKIP_GUILESCM@"
skip-guile	= test -n "@SKIP_GUILE@"
skip-mzscheme	= test -n "@SKIP_MZSCHEME@"
skip-ruby	= test -n "@SKIP_RUBY@"
skip-php4	= test -n "@SKIP_PHP4@"
skip-ocaml      = test -n "@SKIP_OCAML@"
skip-pike       = test -n "@SKIP_PIKE@"
skip-chicken	= test -n "@SKIP_CHICKEN@"
skip-csharp	= test -n "@SKIP_CSHARP@"
skip-modula3	= test -n "@SKIP_MODULA3@"
skip-lua    	= test -n "@SKIP_LUA@"
skip-allegrocl  = test -n "@SKIP_ALLEGROCL@"
skip-clisp	= test -n "@SKIP_CLISP@"
skip-cffi	= test -n "@SKIP_CFFI@"
skip-uffi	= test -n "@SKIP_UFFI@"

# Additional dependencies for some tests
skip-gcj        = test -n "@SKIP_GCJ@"

#####################################################################
# CHECK
#####################################################################

ACTION = check

chk-set-swiglib		= SWIG_LIB=@ROOT_DIR@/Lib
chk-set-swig		= SWIG=@ROOT_DIR@/$(TARGET)
chk-set-env = $(chk-set-swiglib) $(chk-set-swig)

chk = $(MAKE) -k -s $(chk-set-env) $(ACTION)

check-aliveness:
	test -x ./$(TARGET)
	./$(TARGET) -version
	./$(TARGET) -help
	@$(skip-tcl)      || ./$(TARGET) -tcl      -help
	@$(skip-perl5)    || ./$(TARGET) -perl     -help
	@$(skip-python)   || ./$(TARGET) -python   -help
	@$(skip-java)     || ./$(TARGET) -java     -help
	@$(skip-guile)    || ./$(TARGET) -guile    -help
	@$(skip-mzscheme) || ./$(TARGET) -mzscheme -help
	@$(skip-ruby)     || ./$(TARGET) -ruby     -help
	@$(skip-ocaml)    || ./$(TARGET) -ocaml    -help
	@$(skip-php4)     || ./$(TARGET) -php4     -help
	@$(skip-pike)     || ./$(TARGET) -pike     -help
	@$(skip-chicken)  || ./$(TARGET) -chicken  -help
	@$(skip-csharp)   || ./$(TARGET) -csharp   -help
	@$(skip-modula3)  || ./$(TARGET) -modula3  -help
	@$(skip-lua)      || ./$(TARGET) -lua      -help

check: check-aliveness


#####################################################################
# CLEAN
#####################################################################

clean: clean-objects clean-libfiles

clean-objects: clean-source

clean-source:
	@echo cleaning Source
	@cd $(SOURCE) && $(MAKE) -s clean
	@rm -f $(TARGET)

clean-libfiles:
	@rm -f Lib/swigwarn.swg

#####################################################################
# DISTCLEAN
#####################################################################

DISTCLEAN-DEAD = config.status config.log config.cache swig.spec Makefile mkmf.log libtool

distclean: distclean-objects distclean-dead

distclean-objects: distclean-source

distclean-source:
	@echo dist cleaning Source
	@cd $(SOURCE) && $(MAKE) -s distclean
	@rm -f $(TARGET)

distclean-dead:
	rm -f $(DISTCLEAN-DEAD)

#####################################################################
# Update the Lib/swigwarn.swg file
#####################################################################

$(srcdir)/Lib/swigwarn.swg: $(srcdir)/Source/Include/swigwarn.h
	echo "/* Automatically generated file containing all the swig warning codes.  */" > $@
	echo "/* Do not modify this file by hand, change 'Source/Include/swigwarn.h'  */" >> $@
	echo  "/* and use the command 'make Lib/swigwarn.swg' instead.                 */" >> $@
	echo >> $@; echo >> $@
	awk '/#define WARN/{$$1="%define"; $$2="SWIG"$$2; $$3=sprintf("%d %%enddef", $$3); print $$0; next;}\
	      /#/{next;} {print $0}' < $? >> $@

#####################################################################
# TARGETS: install & friends
#####################################################################

INSTALL         = @abs_srcdir@/Tools/config/install-sh -c
INSTALL_DATA    = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} -m 755
MKINSTDIRS      = @abs_srcdir@/Tools/config/install-sh -m 0755 -d
# Use standard autoconf approach to transform executable name using --program-prefix and --program-suffix
transform	= @program_transform_name@

install: install-main install-lib
	@echo "Installation complete"

install-main:
	@echo "Installing SWIG executable"
	@$(MKINSTDIRS) $(DESTDIR)$(BIN_DIR)
	@echo "Installing $(DESTDIR)$(BIN_DIR)/`echo $(TARGET_NOEXE) | sed '$(transform)'`@EXEEXT@"
	@$(INSTALL_PROGRAM) $(TARGET) $(DESTDIR)$(BIN_DIR)/`echo $(TARGET_NOEXE) | sed '$(transform)'`@EXEEXT@

lib-languages = gcj typemaps tcl perl5 python guile java mzscheme ruby php4 ocaml \
	pike chicken csharp modula3 allegrocl clisp lua cffi uffi

lib-modules = std


install-lib: 
	@echo "Installing the SWIG library"
	@$(MKINSTDIRS) $(DESTDIR)$(DATA_DIR)
	@for file in $(srcdir)/Lib/*.i $(srcdir)/Lib/*.swg ; do \
	    i=`basename $$file` ;				\
	    echo "Installing $(DESTDIR)$(DATA_DIR)/$$i";	\
            $(INSTALL_DATA) $$file $(DESTDIR)$(DATA_DIR)/$$i;	\
	    done;
	@for lang in $(lib-languages) $(lib-modules);		\
	    do							\
	    echo "Installing language specific files for $$lang"; \
	    dst=$(DESTDIR)$(DATA_DIR)/$$lang;			\
	    $(MKINSTDIRS) $$dst;				\
	     (doti="`cd $(srcdir)/Lib/$$lang && ls *.i 2>/dev/null`" || doti="";	\
	      dotswg="`cd $(srcdir)/Lib/$$lang && ls *.swg 2>/dev/null`" || dotswg="";	\
	      if [ -f $(srcdir)/Lib/$$lang/extra-install.list ]; then	\
		  extra="`sed '/^#/d' $(srcdir)/Lib/$$lang/extra-install.list`";	\
	      fi;						\
	      files="`echo $$doti $$dotswg $$extra`";		\
	      if [ x"$$files" = x ]; then			\
		  echo "Installing nothing from Lib/$$lang";	\
	      else for file in $$doti $$dotswg $$extra;		\
		  do						\
		  echo "Installing $$dst/$$file";		\
		  $(INSTALL_DATA) $(srcdir)/Lib/$$lang/$$file $$dst/$$file; \
		  done;						\
	      fi) ; 						\
	done


#####################################################################
# TARGETS: uninstall & friends
#####################################################################

uninstall: uninstall-main uninstall-lib
	@echo "Uninstall complete"

uninstall-main:
	@echo "Uninstalling SWIG executable $(DESTDIR)$(BIN_DIR)/`echo $(TARGET_NOEXE) | sed '$(transform)'`@EXEEXT@"
	rm -f $(DESTDIR)$(BIN_DIR)/`echo $(TARGET_NOEXE) | sed '$(transform)'`@EXEEXT@

uninstall-lib:
	@echo "Uninstalling the SWIG library"
	rm -rf $(DESTDIR)$(DATA_DIR)/

############################################################################
# DIST and other maintenance
############################################################################

# distribution directory
dd = @PACKAGE_NAME@-@PACKAGE_VERSION@
srpm = @PACKAGE_NAME@-@PACKAGE_VERSION@

dist:
	@echo 'Dave, what do you want to do w/ "make dist"?'
	@echo 'See Makefile.in target "dist-suggested" for an idea.'
	@echo '    --thi'
	false

dist-suggested:
	rm -rf $(dd) $(dd).tar.gz
	cvs export -d $(dd) -r HEAD SWIG
	tar cf - $(dd) | gzip --best > $(dd).tar.gz
	rm -rf $(dd)

srcrpm:
	rm -fr $(srpm) $(srpm).src.rpm
	cvs export -d $(srpm) -r HEAD SWIG
	cp swig.spec $(srpm)
	tar -cf - $(srpm) | gzip --best > $(srpm).tar.gz
	rm -fr $(srpm)
	rpmbuild -ts $(srpm).tar.gz

# Update the autoconf files for detecting host/targets. Automake will do this in
# version 1.10 for our case of not having a top level Makefile.am. Until then we
# can fetch them manually and will have to commit them to CVS.
configfiles:
	wget ftp://ftp.gnu.org/pub/gnu/config/config.guess -O Tools/config/config.guess
	chmod a+x Tools/config/config.guess
	wget ftp://ftp.gnu.org/pub/gnu/config/config.sub -O Tools/config/config.sub
	chmod a+x Tools/config/config.sub

# This target is usually called from Source/Makefile when configure.in has changed
am--refresh:
	@echo "Build system is out of date. Please reconfigure (rerun: ./autogen.sh && ./configure)"
	@exit 1

# Makefile ends here

