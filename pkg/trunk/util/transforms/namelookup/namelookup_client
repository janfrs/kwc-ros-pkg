#!/usr/bin/env python
# Software License Agreement (BSD License)
#
# Copyright (c) 2008, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of the Willow Garage nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Revision $Id: gossipbot.py 1013 2008-05-21 01:08:56Z sfkwc $

## A test program for the namelookup_server
## It will pass a string and echo the response number.  

import rostools
rostools.update_path('namelookup')

import sys
import string
import rospy
from namelookup.srv import *

def name_lookup_client(x):
    try:
        s = rospy.ServiceProxy('/nameToNumber', NameToNumber)
        #TODO: try/except
        print "Requesting %s"%(x)
        resp = s.call(NameToNumberRequest(x))
        return resp.number
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e

def usage():
    return "Usage: %s [string]"%sys.argv[0]

if __name__ == "__main__":
    if len(sys.argv) == 1:
        print usage()
        sys.exit(1)
    elif len(sys.argv) == 2:
        try:
            x = sys.argv[1]
        except:
            print usage()
            sys.exit(1)
    else:
        print usage()
        sys.exit(1)

    print "%s looks up to %s"%(x, str(name_lookup_client(rospy.resolve_name(x))))
