# Note that the version of 3rdparty/libsunflower needs to closely
# match the nepumuk build.
#
# If all goes according to plan, all you have to touch for a
# nepumuk update is the VERSION. This also allows you to build a
# specific version without touching the Makefile, for example by
# typing:
#
#  $ make VERSION=r900
#
# Or, to replace an existing build, do e.g.:
#
#  $ make VERSION=r900 rebuild
#
# It is also possible to use svn checkout to get the sources, in case
# you need the bleeding edge. This is done using:
#
#  $ make svn-all

all: tarball-all

VERSION=     r912

TARBALL=     nepumuk-$(VERSION).tar.gz
TARBALL_URL= http://downloads.sourceforge.net/libsunflower/$(TARBALL)
SOURCE_DIR=  $(PWD)/nepumuk-$(VERSION)
UNPACK_CMD=  tar xfz
BUILD_DIR=   $(PWD)/build
INST_DIR=    $(PWD)/local
ESTAR_DIR=   `rospack find estar`/local
SFL_DIR=     `rospack find libsunflower`/local
BOOST_DIR=   `rospack --cflags-only-I boost`

SVN_DIR=     $(PWD)/nepumuk-svn
SVN_REV=     HEAD
SVN_URL=     https://libsunflower.svn.sourceforge.net/svnroot/libsunflower/trunk/nepumuk

SIMULINKS=   nepumuk rostest ros0.sh robots.ros0 layout.ros0 expodemo.sh robots.expo layout.expo


include $(shell rospack find mk)/download_unpack.mk

.PHONY: svn-all
svn-all: checkout
	$(MAKE) SOURCE_DIR=$(SVN_DIR) really-all

.PHONY: tarball-all
tarball-all: $(SOURCE_DIR)
	$(MAKE) really-all

rebuild: wipe really-all

.PHONY: really-all
really-all: $(SOURCE_DIR)/configure $(BUILD_DIR)/config.h
	$(MAKE) -C $(BUILD_DIR) install
	$(MAKE) symlinks

checkout:
	test -d $(SVN_DIR) || svn co -r$(SVN_REV) $(SVN_URL) $(SVN_DIR)

update: checkout
	test -d $(SVN_DIR) && svn up $(SVN_DIR)

symlinks:
	for foo in $(SIMULINKS); do \
	  test -L $$foo || ln -s $(INST_DIR)/bin/$$foo || exit 42; done

$(SOURCE_DIR)/configure: $(SOURCE_DIR)/configure.ac $(SOURCE_DIR)/bootstrap-buildsystem.sh
	cd $(SOURCE_DIR) && ./bootstrap-buildsystem.sh

$(BUILD_DIR)/config.h: $(SOURCE_DIR)/configure $(SOURCE_DIR)/config.h.in
	test -d $(BUILD_DIR) || mkdir -p $(BUILD_DIR)
	cd $(BUILD_DIR) && $(SOURCE_DIR)/configure --prefix=$(INST_DIR) \
                                                   --enable-ros \
                                                   --with-sfl=$(SFL_DIR) \
                                                   --with-estar=$(ESTAR_DIR) \
                                                   --with-boost=$(BOOST_DIR)

clean:
	- rm $(SIMULINKS)
	$(MAKE) -C $(BUILD_DIR) clean

distclean:
	- rm $(SIMULINKS)
	$(MAKE) -C $(BUILD_DIR) distclean

wipe:
	rm -rf $(BUILD_DIR) $(INST_DIR)
