#!/usr/bin/env python
#
# Software License Agreement (BSD License)
#
# Copyright (c) 2008, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of the Willow Garage nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import rostools
rostools.update_path('qualification')

import rospy, sys
import wx
from wx import xrc

import qualification
from qualification import *
from qualification.tests import *


class ScanPanel(BaseTest):
  def __init__(self, parent, func = None):
    self.parent = parent
    self.res = xrc.XmlResource(execution_path('gui.xrc'))
    self.panel = self.res.LoadPanel(self.parent, 'scan_panel')
    BaseTest.__init__(self, self.parent, self.panel, func)
    self.panel.Bind(wx.EVT_BUTTON, self.OnTest, id=xrc.XRCID('test_button'))

  def OnTest(self, evt):    
    test = SampleTest(self.parent, self.OnResult)

  def OnResult(self, results):
    print 'Got my results' + str(results)

class QualificationApp(wx.App):
  def OnInit(self):
    self.res = xrc.XmlResource(execution_path('gui.xrc'))

    self.frame = self.res.LoadFrame(None, 'frame');

    self.test_panel = xrc.XRCCTRL(self.frame, 'test_panel')
    self.test_panel_sizer = wx.BoxSizer()
    self.test_panel.SetSizer(self.test_panel_sizer)
    self.test_panel_sizer.SetSizeHints(self.test_panel)
    
    test = ScanPanel(self.test_panel)

    sizer2 = self.frame.GetSizer()
    sizer2.SetSizeHints(self.frame)
    self.frame.SetSize(wx.Size(800,800))
    self.frame.Layout()
    
    self.frame.Show(True)
#   self.frame.Centre()
    return True


if __name__ == '__main__':
  try:
    app = QualificationApp(0)
    app.MainLoop()
  except Exception, e:
    print e
    
  print 'quit'
  rospy.signal_shutdown('GUI shutdown')
