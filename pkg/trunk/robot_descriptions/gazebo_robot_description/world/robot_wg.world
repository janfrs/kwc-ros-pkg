<?xml version="1.0"?>

<gazebo:world 
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:gazebo="http://playerstage.sourceforge.net/gazebo/xmlschema/#gz" 
  xmlns:model="http://playerstage.sourceforge.net/gazebo/xmlschema/#model" 
  xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" 
  xmlns:window="http://playerstage.sourceforge.net/gazebo/xmlschema/#window" 
  xmlns:param="http://playerstage.sourceforge.net/gazebo/xmlschema/#param" 
  xmlns:body="http://playerstage.sourceforge.net/gazebo/xmlschema/#body" 
  xmlns:geo="http://willowgarage.com/xmlschema/#geo" 
  xmlns:geom="http://playerstage.sourceforge.net/gazebo/xmlschema/#geom" 
  xmlns:joint="http://playerstage.sourceforge.net/gazebo/xmlschema/#joint" 
  xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" 
  xmlns:ui="http://playerstage.sourceforge.net/gazebo/xmlschema/#ui"
  xmlns:rendering="http://playerstage.sourceforge.net/gazebo/xmlschema/#rendering" 
  xmlns:renderable="http://playerstage.sourceforge.net/gazebo/xmlschema/#renderable" 
  xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
  xmlns:physics="http://playerstage.sourceforge.net/gazebo/xmlschema/#physics" >

  <verbosity>5</verbosity>

<!-- cfm is 1e-5 for single precision -->
<!-- erp is typically .1-.8 -->
<!-- here's the global contact cfm/erp -->
  <physics:ode>
    <stepTime>0.001</stepTime>
    <gravity>0 0 -9.8</gravity>
    <cfm>0.0000000001</cfm>
    <erp>0.2</erp>
    <quickStep>true</quickStep>
    <quickStepIters>3</quickStepIters>
    <quickStepW>1.3</quickStepW>
  </physics:ode>

  <geo:origin>
    <lat>37.4270909558</lat><lon>-122.077919338</lon>
  </geo:origin>

  <rendering:gui>
    <type>fltk</type>
    <size>1024 800</size>
    <pos>0 0</pos>
    <frames>
      <row height="100%">
        <camera width="100%">
          <xyz>0 0 20</xyz>
          <rpy>0 90 90</rpy>
        </camera>
      </row>
    </frames>
  </rendering:gui>


  <rendering:ogre>
    <ambient>1.0 1.0 1.0 1.0</ambient>
    <sky>
      <material>Gazebo/CloudySky</material>
    </sky>
    <gazeboPath>media</gazeboPath>
    <grid>false</grid>
    <maxUpdateRate>10.</maxUpdateRate>
  </rendering:ogre>

  <model:physical name="gplane">
    <xyz>0 0 0</xyz>	
    <rpy>0 0 0</rpy>
    <static>true</static>

    <body:plane name="plane">
      <geom:plane name="plane">
        <kp>1000000.0</kp>
        <kd>1.0</kd>
        <normal>0 0 1</normal>
        <size>51.3 51.3</size>
        <material>Gazebo/White</material>
      </geom:plane>
    </body:plane>
  </model:physical>

<!--
  <model:physical name="walls">
    <include embedded="false">
      <xi:include href="tests/willow-walls.model" />
    </include>
  </model:physical>
-->
  <model:physical name="willow_map">
   <xyz>-25.65 25.65 1.0</xyz>	
   <rpy>180 0 0</rpy>
   <static>true</static>
   <body:map name="willow_map_body">
     <geom:map name="willow_map_geom">
       <image>willowMap.png</image>
       <threshold>200</threshold>
       <granularity>1</granularity>
       <negative>false</negative>
       <scale>0.1</scale>
       <offset>0 0 0</offset>
       <material>Gazebo/Rocky</material>
     </geom:map>
   </body:map>
  </model:physical>

  <!-- large desk in green room -->
  <model:physical name="obstacles_model1">
    <xyz>-2 -12 0</xyz>
    <rpy>0.0 0.0 0.0 </rpy>
    <include embedded="true">
      <xi:include href="desk1.model" />
    </include>
  </model:physical>

  <!-- small desks -->
  <model:physical name="obstacles_model2">
    <xyz>-11 2.5 0</xyz>
    <rpy>0.0 0.0 0.0 </rpy>
    <include embedded="true">
      <xi:include href="desk2.model" />
    </include>
  </model:physical>

  <!-- small desks -->
  <model:physical name="obstacles_model3">
    <xyz>-4 -12 0</xyz>
    <rpy>0.0 0.0 0.0 </rpy>
    <include embedded="true">
      <xi:include href="desk3.model" />
    </include>
  </model:physical>

  <model:physical name="robot_model1">

    <controller:ros_time name="ros_time" plugin="libRos_Time.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <interface:audio name="dummy_ros_time_iface_should_not_be_here"/>
    </controller:ros_time>

    <xyz>0.0 0.0 0.0408</xyz> <!-- bottom of base off the ground by this much, basically wheel height below skirt -->
    <rpy>0.0 0.0 0.0 </rpy>

    <!-- base, torso and arms -->
    <include embedded="true">
      <xi:include href="pr2.model" />
    </include>

    <!-- PR2_ACTARRAY -->
    <controller:gazebo_mechanism_control name="gazebo_mechanism_control" plugin="libgazebo_mechanism_control.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <interface:audio name="gazebo_mechanism_control_dummy_iface" />
    </controller:gazebo_mechanism_control>

    <!-- battery controls -->
    <controller:gazebo_battery name="gazebo_battery_controller" plugin="libgazebo_battery.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <timeout>5</timeout>
      <diagnostic_rate>1.0</diagnostic_rate>
      <battery_state_rate>1.0</battery_state_rate>
      <full_charge_energy>120.0</full_charge_energy>
      <diagnosticTopicName>diagnostic</diagnosticTopicName>
      <stateTopicName>battery_state</stateTopicName>
      <selfTestServiceName>self_test</selfTestServiceName>
      <interface:audio name="battery_dummy_interface" />
    </controller:gazebo_battery>

    <!-- ptz camera controls -->
    <controller:Ros_PTZ name="left_ptz_cam_controller" plugin="libRos_PTZ.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>15.0</updateRate>
      <panJoint>left_ptz_pan_joint</panJoint>
      <tiltJoint>left_ptz_tilt_joint</tiltJoint>
      <commandTopicName>axis_left/ptz_cmd</commandTopicName>
      <stateTopicName>axis_left/ptz_state</stateTopicName>
      <interface:ptz name="left_ptz_cam_iface" />
    </controller:Ros_PTZ>

    <controller:Ros_PTZ name="right_ptz_cam_controller" plugin="libRos_PTZ.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>15.0</updateRate>
      <panJoint>right_ptz_pan_joint</panJoint>
      <tiltJoint>right_ptz_tilt_joint</tiltJoint>
      <commandTopicName>axis_right/ptz_cmd</commandTopicName>
      <stateTopicName>axis_right/ptz_state</stateTopicName>
      <interface:ptz name="right_ptz_cam_iface" />
    </controller:Ros_PTZ>

    <!-- P3D for position groundtruth -->
    <controller:P3D name="p3d_right_gripper_palm_controller" plugin="libP3D.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <bodyName>right_gripper_palm</bodyName>
      <topicName>right_gripper_palm_pose_ground_truth</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>map</frameName>
      <interface:position name="p3d_right_gripper_palm_position"/>
    </controller:P3D>

    <controller:P3D name="p3d_left_gripper_palm_controller" plugin="libP3D.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <bodyName>left_gripper_palm</bodyName>
      <topicName>left_gripper_palm_pose_ground_truth</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>map</frameName>
      <interface:position name="p3d_left_gripper_palm_position"/>
    </controller:P3D>

    <controller:P3D name="p3d_base_controller" plugin="libP3D.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <bodyName>base</bodyName>
      <topicName>base_pose_ground_truth</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>map</frameName>
      <xyzOffsets>25.65 25.65 0</xyzOffsets> <!-- initialize odometry for fake localization-->
      <rpyOffsets>0 0 0</rpyOffsets>
      <interface:position name="p3d_base_position"/>
    </controller:P3D>

    <controller:F3D name="f3d_left_gripper_l_finger_tip_controller" plugin="libF3D.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <bodyName>left_gripper_l_finger_tip</bodyName>
      <topicName>left_gripper_l_finger_tip_ground_truth</topicName>
      <frameName>map</frameName>
      <interface:position name="f3d_left_gripper_l_finger_tip_position"/>
    </controller:F3D>

    <controller:F3D name="f3d_left_gripper_r_finger_tip_controller" plugin="libF3D.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <bodyName>left_gripper_r_finger_tip</bodyName>
      <topicName>left_gripper_r_finger_tip_ground_truth</topicName>
      <frameName>map</frameName>
      <interface:position name="f3d_left_gripper_r_finger_tip_position"/>
    </controller:F3D>

    <controller:F3D name="f3d_right_gripper_l_finger_tip_controller" plugin="libF3D.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <bodyName>right_gripper_l_finger_tip</bodyName>
      <topicName>right_gripper_l_finger_tip_ground_truth</topicName>
      <frameName>map</frameName>
      <interface:position name="f3d_right_gripper_l_finger_tip_position"/>
    </controller:F3D>

    <controller:F3D name="f3d_right_gripper_r_finger_tip_controller" plugin="libF3D.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <bodyName>right_gripper_r_finger_tip</bodyName>
      <topicName>right_gripper_r_finger_tip_ground_truth</topicName>
      <frameName>map</frameName>
      <interface:position name="f3d_right_gripper_r_finger_tip_position"/>
    </controller:F3D>

  </model:physical>


  <!-- White Directional light -->
  <!--
  <model:renderable name="directional_white">
    <light>
      <type>directional</type>
      <direction>0 -0.5 -0.5</direction>
      <diffuseColor>0.4 0.4 0.4</diffuseColor>
      <specularColor>0.0 0.0 0.0</specularColor>
      <attenuation>1 0.0 1.0 0.4</attenuation>
    </light>
  </model:renderable>
  -->
  

</gazebo:world>
