<?xml version="1.0"?>

<robot name="pr2"><!-- name of the robot-->



<map name="transmissions_gazebo_actuators" flag="gazebo"> <!-- we can set a name too, but the convertor only cares about the flag -->
  <verbatim key="transmissions_gazebo_actuators" includes="true"> <!-- The key attribute is needed noly if multiple <xml> tags are in the same <map> tag -->

  <!-- PR2_ACTARRAY -->
  <controller:gazebo_actuators name="gazebo_actuators" plugin="libgazebo_actuators.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>1000.0</updateRate>

    <robot filename="pr2.xml" />

    <gazebo_physics filename="gazebo_joints.xml" /> <!-- for simulator/physics specific settigs -->

    <interface:audio name="gazebo_actuators_dummy_iface" />
  </controller:gazebo_actuators>

  </verbatim>
</map>


<map name="controllers" flag="gazebo"> <!-- we can set a name too, but the convertor only cares about the flag -->
  <verbatim key="controllers"> <!-- The key attribute is needed noly if multiple <xml> tags are in the same <map> tag -->

  <!-- battery controls -->
  <controller:gazebo_battery name="gazebo_battery_controller" plugin="libgazebo_battery.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>1.0</updateRate>
    <timeout>5</timeout>
    <diagnostic_rate>1.0</diagnostic_rate>
    <battery_state_rate>1.0</battery_state_rate>
    <full_charge_energy>1.0</full_charge_energy>
    <diagnosticTopicName>diagnostic</diagnosticTopicName>
    <stateTopicName>battery_state</stateTopicName>
    <selfTestServiceName>self_test</selfTestServiceName>
    <interface:audio name="battery_dummy_interface" />
  </controller:gazebo_battery>

  <!-- ptz camera controls -->
  <controller:Ros_PTZ name="ptz_cam_left_controller" plugin="libRos_PTZ.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>15.0</updateRate>
    <panJoint>ptz_pan_left_joint</panJoint>
    <tiltJoint>ptz_tilt_left_joint</tiltJoint>
    <commandTopicName>axis_left/ptz_cmd</commandTopicName>
    <stateTopicName>axis_left/ptz_state</stateTopicName>
    <interface:ptz name="ptz_left_iface" />
  </controller:Ros_PTZ>

  <controller:Ros_PTZ name="ptz_cam_right_controller" plugin="libRos_PTZ.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>15.0</updateRate>
    <panJoint>ptz_pan_right_joint</panJoint>
    <tiltJoint>ptz_tilt_right_joint</tiltJoint>
    <commandTopicName>axis_right/ptz_cmd</commandTopicName>
    <stateTopicName>axis_right/ptz_state</stateTopicName>
    <interface:ptz name="ptz_right_iface" />
  </controller:Ros_PTZ>

  <!-- P3D for position groundtruth -->
  <controller:P3D name="p3d_right_wrist_controller" plugin="libP3D.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>1000.0</updateRate>
    <bodyName>gripper_roll_right</bodyName>
    <topicName>gripper_roll_right_pose_ground_truth</topicName>
    <frameName>map</frameName>
    <interface:position name="p3d_right_wrist_position"/>
  </controller:P3D>

  <controller:P3D name="p3d_left_wrist_controller" plugin="libP3D.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>1000.0</updateRate>
    <bodyName>gripper_roll_left</bodyName>
    <topicName>gripper_roll_left_pose_ground_truth</topicName>
    <frameName>map</frameName>
    <interface:position name="p3d_left_wrist_position"/>
  </controller:P3D>

  <controller:P3D name="p3d_base_controller" plugin="libP3D.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>1000.0</updateRate>
    <bodyName>base</bodyName>
    <topicName>base_pose_ground_truth</topicName>
    <frameName>map</frameName>
    <xyzOffsets>25.65 25.65 0</xyzOffsets> <!-- initialize odometry for fake localization-->
    <rpyOffsets>0 0 0</rpyOffsets>
    <interface:position name="p3d_base_position"/>
  </controller:P3D>

  <controller:F3D name="f3d_finger_tip_l_left_controller" plugin="libF3D.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>1000.0</updateRate>
    <bodyName>finger_tip_l_left</bodyName>
    <topicName>finger_tip_l_left_ground_truth</topicName>
    <frameName>map</frameName>
    <interface:position name="f3d_finger_tip_l_left_position"/>
  </controller:F3D>

  <controller:F3D name="f3d_finger_tip_r_left_controller" plugin="libF3D.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>1000.0</updateRate>
    <bodyName>finger_tip_r_left</bodyName>
    <topicName>finger_tip_r_left_ground_truth</topicName>
    <frameName>map</frameName>
    <interface:position name="f3d_finger_tip_r_left_position"/>
  </controller:F3D>

  <controller:F3D name="f3d_finger_tip_l_right_controller" plugin="libF3D.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>1000.0</updateRate>
    <bodyName>finger_tip_l_right</bodyName>
    <topicName>finger_tip_l_right_ground_truth</topicName>
    <frameName>map</frameName>
    <interface:position name="f3d_finger_tip_l_right_position"/>
  </controller:F3D>

  <controller:F3D name="f3d_finger_tip_r_right_controller" plugin="libF3D.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>1000.0</updateRate>
    <bodyName>finger_tip_r_right</bodyName>
    <topicName>finger_tip_r_right_ground_truth</topicName>
    <frameName>map</frameName>
    <interface:position name="f3d_finger_tip_r_right_position"/>
  </controller:F3D>

  </verbatim>
</map>

</robot>

