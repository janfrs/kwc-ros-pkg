<?xml version="1.0"?>

<robot name="pr2"><!-- name of the robot-->

<!-- Begin template definitions for ease of reuse -->


<!-- Begin constant dimensions -->
  <constants>

    <wheel_length>0.03</wheel_length>
    <wheel_radius>0.08</wheel_radius>

    <shoulder_pan_length>0.60</shoulder_pan_length>
    <shoulder_pan_radius>0.13</shoulder_pan_radius>

    <shoulder_pitch_length>0.10</shoulder_pitch_length>
    <shoulder_pitch_radius>0.12</shoulder_pitch_radius>

    <shoulder_roll_x>0.35</shoulder_roll_x>
    <shoulder_roll_y>0.12</shoulder_roll_y>
    <shoulder_roll_z>0.15</shoulder_roll_z>

    <elbow_pitch_length>0.08</elbow_pitch_length>
    <elbow_pitch_radius>0.1</elbow_pitch_radius>

    <forearm_roll_x>0.27</forearm_roll_x>
    <forearm_roll_y>0.12</forearm_roll_y>
    <forearm_roll_z>0.08</forearm_roll_z>

    <wrist_pitch_length>0.031</wrist_pitch_length>
    <wrist_pitch_radius>0.1</wrist_pitch_radius>

    <wrist_roll_x>0.11</wrist_roll_x>
    <wrist_roll_y>0.10</wrist_roll_y>
    <wrist_roll_z>0.05</wrist_roll_z>

    <base_length>0.65</base_length>
    <base_width>0.65</base_width>
    <base_height>0.26</base_height>

    <wheel_clearance_offset>0.02</wheel_clearance_offset> <!-- wheel clearance from bottom of base to ground-->

    <torso_length>0.3</torso_length>
    <torso_width>0.05</torso_width>
    <torso_height>0.8</torso_height>

    <head_pan_length>0.1</head_pan_length>
    <head_pan_radius>0.5</head_pan_radius>

    <head_tilt_length>0.25</head_tilt_length>
    <head_tilt_width>0.1</head_tilt_width>
    <head_tilt_height>0.15</head_tilt_height>

    <base_torso_offset_x>-0.05</base_torso_offset_x>
    <base_torso_offset_y>0.0</base_torso_offset_y>
    <base_torso_offset_z>0.30981</base_torso_offset_z>

    <torso_head_pan_offset_x>-0.1829361-base_torso_offset_x</torso_head_pan_offset_x>
    <torso_head_pan_offset_y>0</torso_head_pan_offset_y>
    <torso_head_pan_offset_z>0.80981-base_torso_offset_z</torso_head_pan_offset_z>
    
    
    <!-- Start new numbers from pr2Core.h -->
    <!-- parent_child_what -->
    <wheel_clearance_offset>0</wheel_clearance_offset> <!-- wheel clearance from bottom of base to ground, was .02-->
    
    <base_caster_offset_x>0.2255</base_caster_offset_x>
    <base_caster_offset_y>0.2255</base_caster_offset_y>
    <base_caster_offset_z>0.08069</base_caster_offset_z>
    
    <caster_wheel_offset_y>0.049</caster_wheel_offset_y>
    
    <base_torso_offset_x>-0.1829361</base_torso_offset_x>
    <base_torso_offset_z>0.30981</base_torso_offset_z>
    
    <torso_shoulder_pan_offset_y>0.1329361</torso_shoulder_pan_offset_y>
    
    <shoulder_pan_shoulder_pitch_offset_x>0.1</shoulder_pan_shoulder_pitch_offset_x>
    <shoulder_pan_shoulder_pitch_offset_z>0.5</shoulder_pan_shoulder_pitch_offset_z>
    
    <shoulder_roll_elbow_pitch_offset_x>0.385</shoulder_roll_elbow_pitch_offset_x>
    
    <elbow_roll_wrist_pitch_offset_x>0.3137</elbow_roll_wrist_pitch_offset_x>
    
    <head_pan_head_pitch_offset_x>0.06</head_pan_head_pitch_offset_x>
    <head_pan_head_pitch_offset_z>0.08</head_pan_head_pitch_offset_z>
    
    <torso_head_offset_x>-0.02</torso_head_offset_x>
    <torso_head_offset_z>0.80981</torso_head_offset_z>
    
    <torso_laser_tilt_offest_x>0.07</torso_laser_tilt_offest_x>
    <torso_laser_tilt_offest_z>0.68</torso_laser_tilt_offest_z>
    
    <base_base_laser_offset_x>0.26</base_base_laser_offset_x>
    <base_base_laser_offset_z>0.28</base_base_laser_offset_z>
    
    <elbow_roll_camera_offset_x>elbow_roll_wrist_pitch_offset_x/2</elbow_roll_camera_offset_x> <!-- this is a guess, please change me -->
    <elbow_roll_camera_offset_y>0</elbow_roll_camera_offset_y> <!-- this is a guess, please change me -->
    <elbow_roll_camera_offset_z>-0.02</elbow_roll_camera_offset_z> <!-- this is a guess, please change me -->
  </constants>
<!-- End constant dimensions -->

  <templates>
    <define template="pr2_caster_visual">
      <xyz>-1 0 -0.08</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>M_PI/2 0.0 M_PI/2 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_caster_mesh_file">
        <filename>caster</filename><!-- mesh specified using an obj file --> 
      </geometry>
    </define> 

    <define template="pr2_caster_collision">
      <xyz>-1 0 0</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <geometry type="box"><!-- geometry specified using a simple geometric object -->
        <size>0.2 0.18 0.22</size> 
      </geometry>
    </define> 

    <define template="pr2_caster_inertial">
      <mass> 3.473082 </mass>
      <com> 0.007342 0.00015 0.095236 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia> 0.012411765597 -0.000711733678 0.00050272983 0.015218160428 -0.000004273467 0.011763977943 </inertia>
    </define> 


    <define template="pr2_caster_joint" type="revolute"> 
      <axis> 0 0 1 </axis> <!-- direction of the joint in the local coordinate frame -->
      <anchor>0 0 0</anchor> <!-- point on the joint relative to the local coordinate frame -->
      <calibration>1.5 -1 </calibration> <!-- Calibration stop/flag indicating location and then direction -->
    </define>

    <define template="pr2_wheel_visual">
      <xyz>-1 0 0</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Black</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_wheel_mesh_file"><!-- geometry specified using a simple geometric object -->
        <filename>wheel</filename>
      </geometry>
    </define> 

    <define template="pr2_wheel_collision">
      <xyz>-1 0 0</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>M_PI/2 0.0 M_PI/2 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <geometry type="cylinder"><!-- geometry specified using a simple geometric object -->
        <size>wheel_radius wheel_length</size> 
      </geometry>
    </define> 

    <define template="pr2_wheel_inertial">
      <mass> 0.44036 </mass>
      <com> 0.000008  0.000008 0.008475 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia> 0.012411765597 -0.000711733678 0.00050272983 0.015218160428 -0.000004273467 0.011763977943 </inertia>
    </define> 

    <define template="pr2_wheel_joint" type="revolute"> 
      <axis> 0 1 0 </axis> <!-- direction of the joint in the local coordinate frame -->
      <anchor>0 0 0</anchor> <!-- point on the joint relative to the local coordinate frame -->
      <calibration>1.5 -1 </calibration> <!-- Calibration stop/flag indicating location and then direction -->
    </define>

    <define template="pr2_shoulder_pan_joint" type="revolute">
      <axis> 0 0 1 </axis> <!-- direction of the joint in a global coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <limit> -M_PI/2 M_PI/2 </limit>
      <calibration>1.5 -1 </calibration> <!-- Calibration stop/flag indicating location and then direction -->
    </define>

    <define template="pr2_shoulder_pan_inertial">
      <mass> 16.29553  </mass>
      <com> -0.005215 -0.030552 -0.175743 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia>0.793291393007  0.003412032973  0.0096614481  0.818419457224  -0.033999499551  0.13915007406 </inertia>
    </define> 

    <define template="pr2_shoulder_pan_collision">
      <xyz>0 0 shoulder_pan_length/2 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0 0 0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale> shoulder_pan_radius*2 shoulder_pan_radius*2 shoulder_pan_length</scale>
      <geometry type="cylinder">
      </geometry>
    </define> 

    <define template="pr2_shoulder_pan_visual">
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0 0 0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_sholder_pan_mesh_file">
        <filename>sh-pan</filename>
      </geometry>
    </define> 

    <define template="pr2_shoulder_pitch_joint" type="revolute">
      <axis> 0 1 0 </axis> <!-- direction of the joint in a global coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <limit> -0.6109 1.3090 </limit>
      <calibration>1.5 -1 </calibration> <!-- Calibration stop/flag indicating location and then direction -->
    </define>

    <define template="pr2_shoulder_pitch_inertial">
      <mass> 2.41223  </mass>
      <com> -0.035895  0.014422 -0.028263</com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia> 0.016640333585 0.002696462583  0.001337742275  0.017232603914  -0.003605106514  0.018723553425</inertia>
    </define> 

    <define template="pr2_shoulder_pitch_collision">
      <xyz>shoulder_pitch_length/2 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>M_PI/2 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <geometry type="cylinder">
      <size> shoulder_pitch_radius shoulder_pitch_length </size>
      </geometry>
    </define> 

    <define template="pr2_shoulder_pitch_visual">
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_sholder_pitch_mesh_file">
        <filename>sh-pitch</filename>
      </geometry>
    </define> 

    <define template="pr2_shoulder_roll_joint" type="revolute">
      <axis> 1 0 0 </axis> <!-- direction of the joint in a global coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <limit> -2.3562 2.3562 </limit>
      <calibration>1.5 -1 </calibration> <!-- Calibration stop/flag indicating location and then direction -->
    </define>

    <define template="pr2_shoulder_roll_inertial">
      <mass> 4.9481 </mass>
      <com> 0.001205 -0.016293 0.21227 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia> 0.073060715309 0.000547745916  0.000119476885  0.072124510748  0.001544932307  0.013383284908</inertia>
    </define> 

    <define template="pr2_shoulder_roll_collision">
      <xyz>shoulder_roll_x/2 0 0</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <geometry type="box">
      <size> shoulder_roll_x shoulder_roll_y shoulder_roll_z </size>
      </geometry>
    </define> 

    <define template="pr2_shoulder_roll_visual">
      <xyz>0 0 0</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_sholder_roll_mesh_file">
        <filename>sh-roll</filename>
      </geometry>
    </define> 

    <define template="pr2_elbow_pitch_joint" type="revolute">
      <axis> 0 1 0 </axis> <!-- direction of the joint in a global coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <limit>  -M_PI/2 0.8727 </limit>
      <calibration>1.5 -1 </calibration> <!-- Calibration stop/flag indicating location and then direction -->
    </define>

    <define template="pr2_elbow_pitch_inertial">
      <mass> 1.689246 </mass>
      <com> -0.011638  0.013173 0.001228 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia> 0.003275298548 0.000292046674  -0.000077359282  0.003236815206  -0.000001162155  0.00410053774 </inertia>
    </define> 

    <define template="pr2_elbow_pitch_collision">
      <xyz>elbow_pitch_length/2 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <geometry type="cylinder">
      <size>elbow_pitch_radius elbow_pitch_length </size>
      </geometry>
    </define> 

    <define template="pr2_elbow_pitch_visual">
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_elbow_pitch_mesh_file">
        <filename>el-pitch</filename>
      </geometry>
    </define> 

    <define template="pr2_forearm_roll_joint" type="revolute">
      <axis> 1 0 0 </axis> <!-- direction of the joint in a global coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <calibration>1.5 -1 </calibration> <!-- Calibration stop/flag indicating location and then direction -->
      <limit>-1 1</limit>
    </define>

    <define template="pr2_forearm_roll_inertial">
      <mass> 1.804155 </mass>
      <com> -0.000058  0.013779 0.179474 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia> 0.012430552544 -0.000003671102 0.000029379389  0.013567548848 -0.000427679042 0.001755089866 </inertia>
    </define> 

    <define template="pr2_forearm_roll_collision">
      <xyz>forearm_roll_x/2 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <geometry type="box">
      <size>forearm_roll_x forearm_roll_y forearm_roll_z </size>
      </geometry>
    </define> 

    <define template="pr2_forearm_roll_visual">
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_forearm_roll_mesh_file">
        <filename>fa-roll</filename>
      </geometry>
    </define> 

    <define template="pr2_wrist_pitch_joint" type="revolute">
      <axis> 0 1 0 </axis> <!-- direction of the joint in a global coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <calibration>1.5 -1 </calibration> <!-- Calibration stop/flag indicating location and then direction -->
      <limit>-1 1</limit>
    </define>

    <define template="pr2_wrist_pitch_inertial">
      <mass> 1.804155 </mass>
      <com> -0.000058  0.013779 0.179474 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia> 0.012430552544 -0.000003671102 0.000029379389  0.013567548848 -0.000427679042 0.001755089866 </inertia>
    </define> 

    <define template="pr2_wrist_pitch_collision">
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <geometry type="cylinder">
      <size>wrist_pitch_radius wrist_pitch_length</size>
      </geometry>
    </define> 

    <define template="pr2_wrist_pitch_visual">
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_wrist_pitch_mesh_file">
        <filename>wr-pitch</filename>
      </geometry>
    </define> 


    <define template="pr2_wrist_roll_joint" type="revolute">
      <axis> 0 1 0 </axis> <!-- direction of the joint in a global coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <calibration>1.5 -1 </calibration> <!-- Calibration stop/flag indicating location and then direction -->
      <limit>-1 1</limit>
    </define>

    <define template="pr2_wrist_roll_inertial">
      <mass> 1.804155 </mass>
      <com> -0.000058  0.013779 0.179474 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia> 0.012430552544 -0.000003671102 0.000029379389  0.013567548848 -0.000427679042 0.001755089866 </inertia>
    </define> 

    <define template="pr2_wrist_roll_collision">
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <geometry type="box">
      <size>wrist_roll_x wrist_roll_y wrist_roll_z </size>
      </geometry>
    </define> 

    <define template="pr2_wrist_roll_visual">
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_wrist_roll_mesh_file">
        <filename>wr-roll</filename>
      </geometry>
    </define> 
  </templates>
<!-- End template definitions for ease of reuse -->


<!-- Begin base definition -->

  <link name="base"><!-- link specifying the base of the robot -->

    <parent> world</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to a global coordinate frame -->
    <xyz> 0 0 wheel_clearance_offset</xyz> <!-- position of a local coordinate frame attached to the link with respect to the parent link's coordinate frame -->

    <joint type="floating" name="joint_base"> 
      <anchor>0.25 0.1 0.3  </anchor> <!-- Initial position of the base in a global coordinate frame -->
    </joint>

    <inertial>
      <mass> 70.750964  </mass>
      <com> -0.061523  0.000942 0.293569 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia>5.652232699207  -0.009719934438  1.293988226423 5.669473158652 -0.007379583694 3.683196351726 </inertia>
    </inertial> 

    <visual>
      <xyz>0 0 0</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_base_mesh_file">
        <filename>base</filename>
      </geometry>
    </visual> 

    <collision>
      <xyz>0 0 base_height/2</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material> 
      <geometry type="box">
      <size>base_length base_width base_height</size>
      </geometry>
    </collision>

  </link>

  <link name="caster_front_left">
    <parent> base</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> base_caster_offset_x base_caster_offset_y base_caster_offset_z </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->
    <joint clone="pr2_caster_joint"/>
    <inertial clone="pr2_caster_inertial"/>
    <visual clone="pr2_caster_visual"/>
    <collision clone="pr2_caster_collision"/>
  </link>


  <link name="caster_front_right">
    <parent> base</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> base_caster_offset_x -base_caster_offset_y base_caster_offset_z </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_caster_joint"/>
    <inertial clone="pr2_caster_inertial"/>
    <visual clone="pr2_caster_visual"/>
    <collision clone="pr2_caster_collision"/>
  </link>

  <link name="caster_rear_left">
    <parent> base</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
      <xyz> -base_caster_offset_x base_caster_offset_y base_caster_offset_z </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

      <joint clone="pr2_caster_joint"/>
      <inertial clone="pr2_caster_inertial"/>
      <visual clone="pr2_caster_visual"/>
    <collision clone="pr2_caster_collision"/>
  </link>

  <link name="caster_rear_right">
    <parent> base</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
      <xyz> -base_caster_offset_x -base_caster_offset_y base_caster_offset_z </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

      <joint clone="pr2_caster_joint"/>
      <inertial clone="pr2_caster_inertial"/>
      <visual clone="pr2_caster_visual"/>
    <collision clone="pr2_caster_collision"/>
  </link>

  <link name="wheel_front_left_l">
    <parent> caster_front_left</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 caster_wheel_offset_y 0 </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wheel_joint"/>
    <inertial clone="pr2_wheel_inertial"/>
    <visual clone="pr2_wheel_visual"/>
    <collision clone="pr2_wheel_collision"/>
  </link>

  <link name="wheel_front_left_r">
    <parent> caster_front_left</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 -caster_wheel_offset_y 0 </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wheel_joint"/>
    <inertial clone="pr2_wheel_inertial"/>
    <visual clone="pr2_wheel_visual"/>
    <collision clone="pr2_wheel_collision"/>
  </link>

  <link name="wheel_front_right_l">
    <parent> caster_front_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 caster_wheel_offset_y 0 </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wheel_joint"/>
    <inertial clone="pr2_wheel_inertial"/>
    <visual clone="pr2_wheel_visual"/>
    <collision clone="pr2_wheel_collision"/>
  </link>


  <link name="wheel_front_right_r">
    <parent> caster_front_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 -caster_wheel_offset_y 0 </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wheel_joint"/>
    <inertial clone="pr2_wheel_inertial"/>
    <visual clone="pr2_wheel_visual"/>
    <collision clone="pr2_wheel_collision"/>
  </link>

  <link name="wheel_rear_left_l">
    <parent> caster_rear_left</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 caster_wheel_offset_y 0 </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wheel_joint"/>
    <inertial clone="pr2_wheel_inertial"/>
    <visual clone="pr2_wheel_visual"/>
    <collision clone="pr2_wheel_collision"/>
  </link>

  <link name="wheel_rear_left_r">
    <parent> caster_rear_left</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 -caster_wheel_offset_y 0 </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wheel_joint"/>
    <inertial clone="pr2_wheel_inertial"/>
    <visual clone="pr2_wheel_visual"/>
    <collision clone="pr2_wheel_collision"/>
  </link>

  <link name="wheel_rear_right_l">
    <parent> caster_rear_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 caster_wheel_offset_y 0 </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wheel_joint"/>
    <inertial clone="pr2_wheel_inertial"/>
    <visual clone="pr2_wheel_visual"/>
    <collision clone="pr2_wheel_collision"/>
  </link>

  <link name="wheel_rear_right_r">
    <parent> caster_rear_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 -caster_wheel_offset_y 0 </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wheel_joint"/>
    <inertial clone="pr2_wheel_inertial"/>
    <visual clone="pr2_wheel_visual"/>
    <collision clone="pr2_wheel_collision"/>
  </link>

<!-- End base definition -->


<!-- Begin torso definition -->

  <link name="torso">
    <parent> base </parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> base_torso_offset_x 0 base_torso_offset_z</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint type="prismatic"> 
      <axis> 0 0 1 </axis> <!-- direction of the joint in a local coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <limit> -0.030 0.396 </limit>
    </joint>

    <inertial>
      <mass> 36.248046  </mass>
      <com> -0.085285  -0.002393 -0.149724 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia> 2.771653750257 0.004284522609  -0.160418504506  2.510019507959 0.029664468704 0.526432355569</inertia>
    </inertial>

    <visual>
      <xyz>0.0 0.0 0.0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_torso_mesh_file">
        <filename>body</filename>
      </geometry>
    </visual> 

    <collision>
      <xyz>0 0 0</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material> 
      <geometry type="box">
      <size> torso_length torso_width torso_height </size>
      </geometry>
    </collision> 
  </link>

<!-- End torso definition -->


<!-- Begin arm definitions -->


  <link name="shoulder_pan_left"><!-- link specifying the shoulder of the robot -->
    <parent> torso</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 torso_shoulder_pan_offset_y 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_shoulder_pan_joint" name="joint_shoulder_pan_left"/>
    <inertial clone="pr2_shoulder_pan_inertial"/>
    <visual clone="pr2_shoulder_pan_visual"/>
    <collision clone="pr2_shoulder_pan_collision"/>
  </link>

  <link name="shoulder_pan_right"><!-- link specifying the shoulder of the robot -->
    <parent> torso</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 -torso_shoulder_pan_offset_y 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_shoulder_pan_joint"/>
    <inertial clone="pr2_shoulder_pan_inertial"/>
    <visual clone="pr2_shoulder_pan_visual"/>
    <collision clone="pr2_shoulder_pan_collision"/>
  </link>






  <link name="shoulder_pitch_left"><!-- link specifying the shoulder of the robot -->
    <parent> shoulder_pan_left</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> shoulder_pan_shoulder_pitch_offset_x 0 shoulder_pan_shoulder_pitch_offset_z </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_shoulder_pitch_joint"/>
    <inertial clone="pr2_shoulder_pitch_inertial"/>
    <visual clone="pr2_shoulder_pitch_visual"/>
    <collision clone="pr2_shoulder_pitch_collision"/>
  </link>

  <link name="shoulder_pitch_right"><!-- link specifying the shoulder of the robot -->
    <parent> shoulder_pan_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> shoulder_pan_shoulder_pitch_offset_x 0 shoulder_pan_shoulder_pitch_offset_z </xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_shoulder_pitch_joint"/>
    <inertial clone="pr2_shoulder_pitch_inertial"/>
    <visual clone="pr2_shoulder_pitch_visual"/>
    <collision clone="pr2_shoulder_pitch_collision"/>
  </link>




  <link name="shoulder_roll_left"><!-- link specifying the shoulder of the robot -->
    <parent> shoulder_pitch_left</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_shoulder_roll_joint"/>
    <inertial clone="pr2_shoulder_roll_inertial"/>
    <visual clone="pr2_shoulder_roll_visual"/>
    <collision clone="pr2_shoulder_roll_collision"/>
  </link>

  <link name="shoulder_roll_right"><!-- link specifying the shoulder of the robot -->
    <parent> shoulder_pitch_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_shoulder_roll_joint"/>
    <inertial clone="pr2_shoulder_roll_inertial"/>
    <visual clone="pr2_shoulder_roll_visual"/>
    <collision clone="pr2_shoulder_roll_collision"/>
  </link>



  <link name="elbow_pitch_left"><!-- link specifying the shoulder of the robot -->
    <parent> shoulder_roll_left</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> shoulder_roll_elbow_pitch_offset_x 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_elbow_pitch_joint"/>
    <inertial clone="pr2_elbow_pitch_inertial"/>
    <visual clone="pr2_elbow_pitch_visual"/>
    <collision clone="pr2_elbow_pitch_collision"/>
  </link>

  <link name="elbow_pitch_right"><!-- link specifying the shoulder of the robot -->
    <parent> shoulder_roll_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> shoulder_roll_elbow_pitch_offset_x 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_elbow_pitch_joint"/>
    <inertial clone="pr2_elbow_pitch_inertial"/>
    <visual clone="pr2_elbow_pitch_visual"/>
    <collision clone="pr2_elbow_pitch_collision"/>
  </link>




  <link name="forearm_roll_left"><!-- link specifying the shoulder of the robot -->
    <parent> elbow_pitch_left</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_forearm_roll_joint"/>
    <inertial clone="pr2_forearm_roll_inertial"/>
    <visual clone="pr2_forearm_roll_visual"/>
    <collision clone="pr2_forearm_roll_collision"/>
  </link>

  <link name="forearm_roll_right"><!-- link specifying the shoulder of the robot -->
    <parent> elbow_pitch_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_forearm_roll_joint"/>
    <inertial clone="pr2_forearm_roll_inertial"/>
    <visual clone="pr2_forearm_roll_visual"/>
    <collision clone="pr2_forearm_roll_collision"/>
  </link>




  <link name="wrist_pitch_left"><!-- link specifying the shoulder of the robot -->
    <parent> forearm_roll_left</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> elbow_roll_wrist_pitch_offset_x 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wrist_pitch_joint"/>
    <inertial clone="pr2_wrist_pitch_inertial"/>
    <visual clone="pr2_wrist_pitch_visual"/>
    <collision clone="pr2_wrist_pitch_collision"/>
  </link>

  <link name="wrist_pitch_right"><!-- link specifying the shoulder of the robot -->
    <parent> forearm_roll_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> elbow_roll_wrist_pitch_offset_x 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wrist_pitch_joint"/>
    <inertial clone="pr2_wrist_pitch_inertial"/>
    <visual clone="pr2_wrist_pitch_visual"/>
    <collision clone="pr2_wrist_pitch_collision"/>
  </link>



  <link name="wrist_roll_left"><!-- link specifying the shoulder of the robot -->
    <parent> wrist_pitch_left</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wrist_roll_joint"/>
    <inertial clone="pr2_wrist_roll_inertial"/>
    <visual clone="pr2_wrist_roll_visual"/>
    <collision clone="pr2_wrist_roll_collision"/>
  </link>

  <link name="wrist_roll_right"><!-- link specifying the shoulder of the robot -->
    <parent> wrist_pitch_right</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> 0 0 0</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->

    <joint clone="pr2_wrist_roll_joint"/>
    <inertial clone="pr2_wrist_roll_inertial"/>
    <visual clone="pr2_wrist_roll_visual"/>
    <collision clone="pr2_wrist_roll_collision"/>
  </link>

<!-- End arm definitions -->


<!-- Begin head definition -->


  <link name="head_pan"><!-- link specifying the shoulder of the robot -->
    <parent>torso</parent>
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> torso_head_offset_x 0 torso_head_offset_z</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->


    <joint type="revolute"> 
      <axis> 0 0 1 </axis> <!-- direction of the joint in a local coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <limit> -2.9322 2.9322 </limit>
    </joint>

    <inertial>
      <mass> 1.611118  </mass>
      <com> -0.005717  0.010312 -0.029649 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia>0.00482611007  -0.000144683999  0.000110076136  0.005218991412  -0.000314239509  0.008618784925 </inertia>
    </inertial>

    <visual>
      <xyz>0 0 0</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0 0 0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_head_pan_mesh_file">
        <filename>head-pan</filename>
      </geometry>
    </visual> 

    <collision>
      <xyz> 0 0 0</xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material> 
      <geometry type="cylinder">
        <size>head_pan_radius head_pan_length </size>
      </geometry>
    </collision> 

  </link>

  <link name="head_tilt"><!-- link specifying the shoulder of the robot -->
    <parent> head_pan</parent>

    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the link with respect to the parent's frame -->
    <xyz> head_pan_head_pitch_offset_x 0 head_pan_head_pitch_offset_z</xyz> <!-- position of a local coordinate frame attached to the link with respect to parent's frame-->


    <joint type="revolute"> 
      <axis> 0 1 0 </axis> <!-- direction of the joint in a local coordinate frame -->
      <anchor>0 0 0  </anchor> <!-- point on the joint relative to the parent's anchor in a global coordinate frame -->
      <limit> -M_PI/6 M_PI/3 </limit>
    </joint>

    <inertial>
      <mass>1.749727 </mass>
      <com> 0.041935 0.003569 0.028143 </com> <!-- position of the center of mass with respect to the link's own anchor in a local coordinate frame -->
      <inertia>0.010602303435  -0.000408814235  0.00198303894  0.011874383747  0.000197908779  0.005516790626</inertia>
    </inertial>

    <visual>
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_head_tilt_mesh_file">
        <filename>head-tilt</filename>
      </geometry>
    </visual> 

    <collision>
      <xyz>0 0 0 </xyz> <!-- location defined with respect to the link origin in a local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material> 
      <geometry type="box">
        <size>head_tilt_length head_tilt_width head_tilt_height</size>
      </geometry>
    </collision> 
  </link>

<!-- End head definition -->

<!-- Begin right finger definition -->
<!-- End right finger definition -->
<!-- Begin left finger definition -->
<!-- End left finger definition -->


<!-- Begin sensor definitions -->

  <sensor name="left_forearm_camera" type="camera"> 

    <calibration> calib_filename </calibration>
    <parent>forearm_roll_left</parent>
    <xyz> elbow_roll_camera_offset_x elbow_roll_camera_offset_y elbow_roll_camera_offset_z </xyz> <!-- position of a local coordinate frame attached to the sensor with respect to the parent link's coordinate frame -->
    <rpy> 0 0 0 </rpy> <!-- rotation of a local coordinate frame attached to the sensor with respect to the parent link's coordinate frame -->
    <inertial>
      <mass> 10.0  </mass>
      <com> 0.5 0.1 2 </com> <!-- position of the center of mass with respect to the sensor's local coordinate frame -->
      <inertia>0 0 0 0 0 0 </inertia>
    </inertial> 
    <visual>
      <xyz>0   0   0   </xyz> <!-- location defined with respect to the link origin in the sensor's local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material>
      <geometry type="box" name="pr2_left_forearm_camera"><!-- geometry specified using a simple geometric object -->
        <size>1 1 1</size> 
      </geometry>

      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="pr2_left_forearm_camera_mesh_file">
        <filename>pr2_left_forearm_camera</filename><!-- mesh specified using an obj file --> 
      </geometry>
    </visual> 
    <collision>
      <xyz>0   0   0   </xyz> <!-- location defined with respect to the link origin in the sensor's local coordinate frame -->
      <rpy>0.0 0.0 0.0 </rpy> <!-- All angles always in radians, yaw about Z axis, pitch about the Y axis and roll about the X axis -->
      <material>Gazebo/Grey</material> 
      <geometry type="box" name="collision_left_forearm_camera"><!-- geometry specified using a simple geometric object -->
        <size>1 1 1</size> 
      </geometry>

      <scale>0.001 0.001 0.001</scale>
      <geometry type="mesh" name="collision_left_forearm_camera">
        <filename>visual_left_forearm_camera</filename><!-- mesh specified using an obj file --> 
      </geometry>
    </collision>
  </sensor>

<!-- End sensor definitions -->

<!-- Include actuators definition -->

  <include>actuators.xml</include>
  
  <!-- Define groups of links; a link may be part of multiple groups -->

  <group name="leftArm">
    shoulder_pan_left
    shoulder_pitch_left
    shoulder_roll_left
    elbow_pitch_left
    forearm_roll_left
    wrist_pitch_left
    wrist_roll_left
  </group>
  
  <group name="rightArm">
    shoulder_pan_right
    shoulder_pitch_right
    shoulder_roll_right
    elbow_pitch_right
    forearm_roll_right
    wrist_pitch_right
    wrist_roll_right
  </group>
  
  <group name="arms">
    shoulder_pan_left
    shoulder_pitch_left
    shoulder_roll_left
    elbow_pitch_left
    forearm_roll_left
    wrist_pitch_left
    wrist_roll_left
    shoulder_pan_right
    shoulder_pitch_right
    shoulder_roll_right
    elbow_pitch_right
    forearm_roll_right
    wrist_pitch_right
    wrist_roll_right
  </group>
  
  <group name="head">
    head_pan
    head_tilt    
  </group>

  <!-- Inclusion of this file causes the urdf2gazebo translator to produce
       a .world file that makes Gazebo crash - BPG -->
  <include>controllers.xml</include> 

</robot>
