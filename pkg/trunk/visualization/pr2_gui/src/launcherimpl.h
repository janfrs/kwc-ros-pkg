#ifndef __launcherimpl__
#define __launcherimpl__

/**
@file
Subclass of launcher, which is generated by wxFormBuilder.
*/

//gui stuff
#include "pr2_gui.h"
#include "Vis3d.h"
#include "image_utils/image_codec.h"
#include <wx/dcclient.h>
#include <wx/mstream.h>
#include <wx/image.h>

//ros stuff
#include "ros/node.h"
#include "std_msgs/Image.h"
#include "std_msgs/PTZActuatorCmd.h"
#include "std_msgs/PTZActuatorState.h"
/** Implementing launcher */
class LauncherImpl : public launcher
{
protected:
	// Handlers for launcher events.
	void startStopHeadPtCld( wxCommandEvent& event );
	void startStopFloorPtCld( wxCommandEvent& event );
	void startStopStereoPtCld( wxCommandEvent& event );
	void startStopModel( wxCommandEvent& event );
	void startStopUCS( wxCommandEvent& event );
	void startStopGrid( wxCommandEvent& event );
	void startStopObjects( wxCommandEvent& event );
	void viewChanged( wxCommandEvent& event );
	void HeadLaserChanged( wxCommandEvent& event );
	void startStop_Visualization( wxCommandEvent& event );
	void startStop_Topdown( wxCommandEvent& event );
	void startStop_PTZL( wxCommandEvent& event );
	void startStop_PTZR( wxCommandEvent& event );
	void startStop_WristL( wxCommandEvent& event );
	void startStop_WristR( wxCommandEvent& event );
	void EmergencyStop( wxCommandEvent& event );
	void PTZLDrawPic( wxCommandEvent& event );
	void PTZRDrawPic( wxCommandEvent& event );
	void WristRDrawPic( wxCommandEvent& event );
	void WristLDrawPic( wxCommandEvent& event );
	void consoleOut(wxString Line);
	
	void incomingPTZLImageConn();
	void incomingPTZRImageConn();
	void incomingWristRImageConn();
	void incomingWristLImageConn();
	void incomingPTZLState();
	void incomingPTZRState();
	
	void PTZR_ptzChanged(wxScrollEvent& event);
	void PTZL_ptzChanged(wxScrollEvent& event);
	
public:
//Variables
	ros::node *myNode;
	std_msgs::Image PTZLImage;
	std_msgs::Image PTZRImage;
	std_msgs::Image WristLImage;
	std_msgs::Image WristRImage;
	std_msgs::PTZActuatorCmd ptz_cmd;
	std_msgs::PTZActuatorState PTZL_state;
	std_msgs::PTZActuatorState PTZR_state;
	Vis3d *vis3d_Window;
	
	uint8_t *PTZLImageData;
	uint8_t *PTZRImageData;
	uint8_t *WristLImageData;
	uint8_t *WristRImageData;
	
	bool PTZL_GET_NEW_IMAGE;
	bool PTZR_GET_NEW_IMAGE;
	bool WristR_GET_NEW_IMAGE;
	bool WristL_GET_NEW_IMAGE;
	wxBitmap *PTZL_bmp;
	wxBitmap *PTZR_bmp;
	wxBitmap *WristR_bmp;
	wxBitmap *WristL_bmp;
	wxImage *PTZL_im;
	wxImage *PTZR_im;
	wxImage *WristR_im;
	wxImage *WristL_im;
	/** Constructor */
	LauncherImpl( wxWindow* parent );
	
};

#endif // __launcherimpl__
