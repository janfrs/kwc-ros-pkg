#!/usr/bin/python
import subprocess as sub
import sys, os, time

def printr(line):
    red = '\033[0;31m'
    default = '\033[00;00m'
    print red + line + default

def check_for_msg(line):
    if line[:5] == "Got a":
        printr("Dustbuster: " + line[:-1])
        return 1
    else:
        return 0

def runDataCollect():

    dirname = sys.argv[1]
    filebase = "fg"
    snap = "`rospack find megamaid`/bin/dustbuster --seq " + dirname + " " + filebase + " videre/cal_params labeled_images spacetime_stereo videre/images"
    printr("using cmd: " + snap)
    p = sub.Popen("xterm -e `rospack find scene_labeler`/bin/image_bg_subtr_multi", shell=True)

    os.system('ssh -f prc0 "killall sts_node"')
    os.system('ssh -f prc0 "killall lpg"')
    time.sleep(1)
    os.system('ssh -Yf prc0 "ROS_MASTER_URI=http://fep:11311 rosrun spacetime_stereo sts_node"') #start sts with X forwarding.
    os.system('ssh -f prc0 "DISPLAY=:0.0 ~tombari/lpgcode/vernaza_lpg/lpg"')
    time.sleep(1)
    os.system('ssh -f prc0 "killall -s USR1 lpg"') #turn on projector.

    while True:
        printr( "Starting scene collection.")
        printr("Press enter when you have constructed your mask in image_bg_subtr")
        raw_input("")
        
        snap_p = sub.Popen(snap, shell=True, stdout=sub.PIPE);
        nMsgs = 0;
        while True:
            line = snap_p.stdout.readline()
            nMsgs += check_for_msg(line)
            if(nMsgs == 3):
                break


        printr( "All msgs but spacetime stereo have been recorded.")
        printr( "Starting spacetime stereo computation")

        time.sleep(1)

        os.system('ssh -f prc0 "killall -s USR1 sts_node"') #compute next point cloud using S.T.S.

        snap_p.wait() #Wait until sts is done and dustbuster dies.
        printr( "=== Done collecting that scene. ===")
            


try:
    runDataCollect()
finally:
    printr("cleaning up.")
    os.system('ssh -f prc0 "killall sts_node"')
    os.system('ssh -f prc0 "killall lpg"')
