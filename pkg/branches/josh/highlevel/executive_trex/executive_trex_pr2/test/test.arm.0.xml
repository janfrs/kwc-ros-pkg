
<launch>

  <!-- Sends robot description data to the param server -->
  <param name="robotdesc/pr2" command="$(find wg_robot_description_parser)/merge &quot;$(find wg_robot_description)/pr2/pr2.xml&quot;" />
  
  <!-- Launch Gazebo with suitable settings and world file -->
  <!--node pkg="gazebo" type="v.bash" args="-n $(find gazebo_robot_description)/world/robot_floorobj.world" respawn="false" output="screen"/-->
  <node pkg="gazebo" type="gazebo" args="-n $(find gazebo_robot_description)/world/robot_floorobj.world" respawn="false" output="screen">
    <env name="LD_LIBRARY_PATH" value="$(find gazebo_plugin)/lib:$(find gazebo)/gazebo/lib:$(find Cg)/Cg/lib:$LD_LIBRARY_PATH" />
    <env name="GAZEBO_RESOURCE_PATH" value="$(find gazebo_robot_description)/world" />
    <env name="OGRE_RESOURCE_PATH" value="$(find ogre)/ogre/lib/OGRE" />
    <env name="MC_RESOURCE_PATH" value="$(find gazebo_robot_description)/world" />
  </node>

  <!-- Launch the node collection for a gazebo sim -->
  <include file="$(find executive_trex_pr2)/cfg/launch_gazebo.xml"/>

  
  



  <node pkg="executive_trex_pr2" type="runarmtrex.sh" args="$(find executive_trex_pr2)/test/arm.0.output $(find executive_trex_pr2)/arm.0" respawn="false" />
  <test test-name="executive_trex_arm_0" pkg="executive_trex_pr2" time-limit="130.0" type="test.arm.0.py" />
</launch>

