Index: gazebo-svn/server/sensors/Sensor.cc
===================================================================
--- gazebo-svn/server/sensors/Sensor.cc	(revision 6915)
+++ gazebo-svn/server/sensors/Sensor.cc	(working copy)
@@ -32,6 +32,7 @@
 #include "World.hh"
 #include "ControllerFactory.hh"
 #include "Sensor.hh"
+#include "Simulator.hh"
 
 using namespace gazebo;
 
@@ -58,6 +59,14 @@
   this->SetName(node->GetString("name","",1));
   this->LoadController( node->GetChildByNSPrefix("controller") );
   this->LoadChild(node);
+
+  double updateRate  = node->GetDouble("updateRate", 0, 0);
+  if (updateRate == 0)
+    this->updatePeriod = 0.0; // no throttling if updateRate is 0
+  else
+    this->updatePeriod = 1.0 / updateRate;
+  this->lastUpdate   = Simulator::Instance()->GetSimTime();
+
 }
 
 ////////////////////////////////////////////////////////////////////////////////
@@ -71,7 +80,12 @@
 /// Update the sensor
 void Sensor::Update()
 {
-  this->UpdateChild();
+  if (this->lastUpdate + updatePeriod <= Simulator::Instance()->GetSimTime())
+  {
+    this->UpdateChild();
+    this->lastUpdate = Simulator::Instance()->GetSimTime();
+  }
+  // controller has its own updatRate control
   if (this->controller)
     this->controller->Update();
 }
@@ -147,4 +161,11 @@
   this->active = value;
 }
 
+////////////////////////////////////////////////////////////////////////////////
+/// \brief Set whether the sensor is active or not
+bool Sensor::IsActive()
+{
+  return this->active;
+}
 
+
Index: gazebo-svn/server/sensors/Sensor.hh
===================================================================
--- gazebo-svn/server/sensors/Sensor.hh	(revision 6915)
+++ gazebo-svn/server/sensors/Sensor.hh	(working copy)
@@ -63,6 +63,7 @@
 
     /// \brief Set whether the sensor is active or not
     public: void SetActive(bool value);
+    public: bool IsActive();
 
     /// \brief  Load the child sensor
     protected: virtual void LoadChild(XMLConfigNode * /*node*/) {};
@@ -88,8 +89,14 @@
 
     /// \brief True if active
     protected: bool active;
+
+    /// \brief Update period 
+    protected: double updatePeriod;
+
+    /// \brief Last update time
+    protected: double lastUpdate;
+
   };
-  
   /// \}
 }
 #endif
