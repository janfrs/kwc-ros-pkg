--- newmat-1.10.4.orig/include.h
+++ newmat-1.10.4/include.h
@@ -7,7 +7,9 @@
 #ifndef INCLUDE_LIB
 #define INCLUDE_LIB
 
-//#define use_namespace                   // define name spaces
+#include "config.h" // create a blank file if missing (not using autotools) , 
+
+#define use_namespace   // define name spaces // commented by default
 
 //#define SETUP_C_SUBSCRIPTS              // allow element access via A[i][j]
 
@@ -36,7 +38,7 @@
 //#define ios_format_flags ios::fmtflags  // for Gnu 3 and Intel for Linux
 
 
-//#define _STANDARD_                    // using standard library
+#define _STANDARD_    // using standard library // default is commented
 
 //#define use_float_h                   // use float.h for precision data
 
@@ -73,8 +75,13 @@
       #include <limits>              // for VC++6
    #endif
    #ifdef WANT_STREAM
-      #include <iostream>
-      #include <iomanip>
+      #ifdef use_namespace //#~rzr{ needed for msvc-6 msvc-7.1 msvc-8
+         #include <iostream>
+         #include <iomanip>
+      #else
+         #include <iostream.h>
+         #include <iomanip.h>
+      #endif // #~rzr}
    #endif
    #ifdef WANT_MATH
       #include <cmath>
@@ -106,8 +113,13 @@
 //   }
 
    #ifdef WANT_STREAM
-      #include <iostream.h>
-      #include <iomanip.h>
+      #ifdef use_namespace //#~rzr{ needed for msvc-6 msvc-7.1 msvc-8
+         #include <iostream>
+         #include <iomanip>
+      #else
+         #include <iostream.h>
+         #include <iomanip.h>
+      #endif // #~rzr}
    #endif
    #ifdef WANT_MATH
       #include <math.h>
--- newmat-1.10.4.orig/newmat.h
+++ newmat-1.10.4/newmat.h
@@ -560,6 +560,8 @@
 
 
 
+class Matrix;
+Real DotProduct(const Matrix& A, const Matrix& B);
 class Matrix : public GeneralMatrix             // usual rectangular matrix
 {
    GeneralMatrix* Image() const;                // copy of matrix
@@ -1207,6 +1209,12 @@
    NEW_DELETE(AddedMatrix)
 };
 
+class SPMatrix;
+#ifndef TEMPS_DESTROYED_QUICKLY
+   SPMatrix SP(const BaseMatrix&, const BaseMatrix&);
+#else
+   SPMatrix& SP(const BaseMatrix&, const BaseMatrix&);
+#endif
 class SPMatrix : public AddedMatrix
 {
 protected:
@@ -1230,6 +1238,12 @@
    NEW_DELETE(SPMatrix)
 };
 
+class KPMatrix;
+#ifndef TEMPS_DESTROYED_QUICKLY
+   KPMatrix KP(const BaseMatrix&, const BaseMatrix&);
+#else
+   KPMatrix& KP(const BaseMatrix&, const BaseMatrix&);
+#endif
 class KPMatrix : public MultipliedMatrix
 {
 protected:
@@ -1328,6 +1342,12 @@
    NEW_DELETE(ShiftedMatrix)
 };
 
+class NegShiftedMatrix;
+#ifndef TEMPS_DESTROYED_QUICKLY
+   NegShiftedMatrix operator-(Real, const BaseMatrix&);
+#else
+   NegShiftedMatrix& operator-(Real, const BaseMatrix&);
+#endif
 class NegShiftedMatrix : public ShiftedMatrix
 {
 protected:
--- newmat-1.10.4.orig/newmatnl.cpp
+++ newmat-1.10.4/newmatnl.cpp
@@ -10,6 +10,7 @@
 #include "newmatnl.h"
 
 #ifdef use_namespace
+using namespace std; //#~rzr : needed for msvc
 namespace NEWMAT {
 #endif
 
--- newmat-1.10.4.orig/tmt1.cpp
+++ newmat-1.10.4/tmt1.cpp
@@ -10,6 +10,7 @@
 #include "tmt.h"
 
 #ifdef use_namespace
+using namespace std; //#~rzr : needed for msvc
 using namespace NEWMAT;
 #endif
 
--- newmat-1.10.4.orig/tmtm.cpp
+++ newmat-1.10.4/tmtm.cpp
@@ -8,6 +8,7 @@
 #include "tmt.h"
 
 #ifdef use_namespace
+using namespace std; //#~rzr : needed for msvc
 using namespace NEWMAT;
 #endif
 
--- newmat-1.10.4.orig/debian/README.Debian
+++ newmat-1.10.4/debian/README.Debian
@@ -0,0 +1,8 @@
+newmat for Debian
+-----------------
+
+Upstream version name was 10C renamed to 1.10.2
+
+Using default settings plus C++ namespaces support to prevent polution
+
+ -- Philippe Coval <rzr@users.sf.net>, Sat,  1 Apr 2006 12:08:38 +0200
--- newmat-1.10.4.orig/debian/changelog
+++ newmat-1.10.4/debian/changelog
@@ -0,0 +1,25 @@
+newmat (1.10.4-2build1) feisty; urgency=low
+
+  * Rebuild for ldbl128 change on powerpc and sparc.
+
+ -- Matthias Klose <doko@ubuntu.com>  Thu,  2 Nov 2006 10:23:58 +0000
+
+newmat (1.10.4-2) unstable; urgency=low
+
+  * Closes: #367875 (for g++ 4.1 support)
+
+ -- Philippe Coval <rzr@users.sf.net>  Sat, 20 May 2006 00:01:28 +0200
+
+newmat (1.10.4-1) unstable; urgency=low
+
+  * New upstream release
+
+ -- Philippe Coval <rzr@users.sf.net>  Sat,  6 May 2006 01:09:53 +0200
+
+newmat (1.10.3-1) unstable; urgency=low
+
+  * Initial release Closes: #335185
+
+ -- Philippe Coval <rzr@users.sf.net>  Sat,  1 Apr 2006 12:08:38 +0200
+
+
--- newmat-1.10.4.orig/debian/compat
+++ newmat-1.10.4/debian/compat
@@ -0,0 +1 @@
+4
--- newmat-1.10.4.orig/debian/Makefile.am
+++ newmat-1.10.4/debian/Makefile.am
@@ -0,0 +1,37 @@
+#ident "$Id: Makefile.am -- pcoval"
+lib_LTLIBRARIES = libnewmat.la
+
+libnewmat_la_LDFLAGS = -version-info 10:0:0
+
+libnewmat_la_SOURCES = \
+  newmat1.cpp newmat2.cpp newmat3.cpp newmat4.cpp newmat5.cpp newmat6.cpp \
+  newmat7.cpp newmat8.cpp newmatex.cpp bandmat.cpp submat.cpp myexcept.cpp \
+  cholesky.cpp evalue.cpp fft.cpp hholder.cpp jacobi.cpp newfft.cpp \
+  sort.cpp svd.cpp newmatrm.cpp newmat9.cpp
+ #
+
+pkgincludedir = $(includedir)/newmat
+
+pkginclude_HEADERS = \
+  config.h include.h \
+  boolean.h controlw.h myexcept.h newmat.h newmatnl.h newmatrm.h solution.h \
+  newmatap.h  newmatio.h  newmatrc.h  precisio.h
+ #
+
+bin_PROGRAMS = example test_exc tmt
+
+example_SOURCES = example.cpp
+example_LDFLAGS = -lnewmat
+
+test_exc_SOURCES = test_exc.cpp
+test_exc_LDFLAGS = -lnewmat
+
+
+tmt_SOURCES = tmt.cpp \
+  tmt1.cpp tmt2.cpp tmt3.cpp tmt4.cpp tmt5.cpp tmt6.cpp tmt7.cpp tmt8.cpp \
+  tmt9.cpp tmta.cpp tmtb.cpp tmtc.cpp tmtd.cpp tmte.cpp tmtf.cpp tmtg.cpp \
+  tmth.cpp tmti.cpp tmtj.cpp tmtk.cpp tmtl.cpp tmtm.cpp
+ #
+tmt_LDFLAGS = -lnewmat
+
+#eof "$Id: Makefile.am -- pcoval"
--- newmat-1.10.4.orig/debian/bootstrap
+++ newmat-1.10.4/debian/bootstrap
@@ -0,0 +1,15 @@
+#! /bin/sh
+set -xe
+
+aclocal-1.7
+libtoolize --force --copy
+libtoolize --ltdl --force --copy
+autoheader
+touch  INSTALL NEWS ChangeLog # COPYING README AUTHORS  # TODO 
+automake-1.7 --add-missing --copy 
+automake-1.7
+autoconf
+
+rm -f config.cache
+
+#eof "$Id: bootstrap -- pcoval $"
--- newmat-1.10.4.orig/debian/dirs
+++ newmat-1.10.4/debian/dirs
@@ -0,0 +1,3 @@
+usr/lib
+usr/include
+
--- newmat-1.10.4.orig/debian/configure.in
+++ newmat-1.10.4/debian/configure.in
@@ -0,0 +1,35 @@
+#                                               -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+AC_PREREQ(2.59)
+AC_INIT(newmat, 1.10.2, rzr@users.sf.net)
+AM_INIT_AUTOMAKE(libnewmat, 1.10.2)
+
+AC_CONFIG_SRCDIR([config.h.in])
+AC_CONFIG_HEADER([config.h])
+# AC_CONFIG_FILES([Makefile]) 
+
+AC_LANG_CPLUSPLUS
+# Checks for programs.
+AC_PROG_CXX
+AC_PROG_CC
+AC_PROG_INSTALL
+AC_PROG_LIBTOOL
+
+# Checks for libraries.
+
+# Checks for header files.
+AC_CHECK_HEADER( [ float.h , cstdlib , setjmp.h , limits ] )
+
+# Checks for typedefs, structures, and compiler characteristics.
+AC_HEADER_STDBOOL
+AC_C_CONST
+AC_C_INLINE
+AC_TYPE_SIZE_T
+AC_STRUCT_TM
+
+# Checks for library functions.
+AC_CHECK_FUNCS([floor pow sqrt])
+AC_OUTPUT( [Makefile] )
+
+
+#eof "Id: configure.in -- pcoval $"
--- newmat-1.10.4.orig/debian/libnewmat10-dev.examples
+++ newmat-1.10.4/debian/libnewmat10-dev.examples
@@ -0,0 +1,2 @@
+example.cpp
+example.txt
--- newmat-1.10.4.orig/debian/libnewmat10-dev.files
+++ newmat-1.10.4/debian/libnewmat10-dev.files
@@ -0,0 +1,5 @@
+usr/include/*
+usr/lib/lib*.a
+usr/lib/lib*.so
+usr/lib/pkgconfig/*
+usr/lib/*.la
--- newmat-1.10.4.orig/debian/libnewmat10-dev.links
+++ newmat-1.10.4/debian/libnewmat10-dev.links
@@ -0,0 +1 @@
+/usr/lib/libnewmat.so.10 /usr/lib/libnewmat.so
--- newmat-1.10.4.orig/debian/libnewmat10.files
+++ newmat-1.10.4/debian/libnewmat10.files
@@ -0,0 +1 @@
+usr/lib/lib*.so.*
--- newmat-1.10.4.orig/debian/control
+++ newmat-1.10.4/debian/control
@@ -0,0 +1,60 @@
+Source: newmat
+Priority: optional
+Maintainer: Philippe Coval <rzr@users.sf.net>
+Uploader: Andreas Tille <tille@debian.org>
+Build-Depends: debhelper (>= 4.0.0), autotools-dev, automake1.7, autoconf (>> 2.13), libtool , libltdl3-dev
+Standards-Version: 3.6.2
+Section: libs
+
+Package: libnewmat10
+Section: libs
+Architecture: any
+Depends: ${shlibs:Depends}, ${misc:Depends}
+Description: matrix manipulations C++ library
+ Newmat library is intended for scientists and engineers 
+ who need to manipulate a variety of types of matrices 
+ using standard matrix operations.
+ Emphasis is on the kind of operations needed in statistical calculations
+ such as least squares, linear equation solve and eigenvalues.
+ .
+ Newmat supports matrix types: Matrix (rectangular matrix); 
+ UpperTriangularMatrix; LowerTriangularMatrix; DiagonalMatrix; 
+ SymmetricMatrix; BandMatrix; UpperBandMatrix; LowerBandMatrix; 
+ SymmetricBandMatrix; IdentityMatrix;
+ RowVector; ColumnVector.
+ .
+ Only one element type (float or double) is supported.
+ .
+ The library includes the operations *, +, -, *=, +=, -=, Kronecker product,
+ Schur product, concatenation, inverse, transpose, conversion between types,
+ submatrix, determinant, Cholesky decomposition, QR triangularisation,
+ singular value decomposition, eigenvalues of a symmetric matrix, sorting,
+ fast Fourier and trig. transforms and printing.
+
+Package: libnewmat10-dev
+Provides: libnewmat-dev
+Section: libdevel
+Architecture: any
+Depends: libnewmat10 (= ${Source-Version})
+Description: matrix manipulations C++ library
+ Newmat library is intended for scientists and engineers 
+ who need to manipulate a variety of types of matrices 
+ using standard matrix operations.
+ Emphasis is on the kind of operations needed in statistical calculations
+ such as least squares, linear equation solve and eigenvalues.
+ .
+ Newmat supports matrix types: Matrix (rectangular matrix); 
+ UpperTriangularMatrix; LowerTriangularMatrix; DiagonalMatrix; 
+ SymmetricMatrix; BandMatrix; UpperBandMatrix; LowerBandMatrix; 
+ SymmetricBandMatrix; IdentityMatrix;
+ RowVector; ColumnVector.
+ .
+ Only one element type (float or double) is supported (default is double).
+ .
+ The library includes the operations *, +, -, *=, +=, -=, Kronecker product,
+ Schur product, concatenation, inverse, transpose, conversion between types,
+ submatrix, determinant, Cholesky decomposition, QR triangularisation,
+ singular value decomposition, eigenvalues of a symmetric matrix, sorting,
+ fast Fourier and trig. transforms and printing.
+ .
+ libnewmat-dev contains static libraries, headers, and some documentation.
--- newmat-1.10.4.orig/debian/rules
+++ newmat-1.10.4/debian/rules
@@ -0,0 +1,103 @@
+#!/usr/bin/make -f
+# -*- makefile -*-
+# Uncomment this to turn on verbose mode.
+#export DH_VERBOSE=1
+
+DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
+DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
+
+
+CXXFLAGS = -Wall -g $(DEB_ARCH_OPT_FLAGS)
+
+ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
+	CXXFLAGS += -O0
+else
+	CXXFLAGS += -O2
+endif
+
+# shared library versions,
+version=`ls src/.libs/lib*.so.* | \
+awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
+major=`ls src/.libs/lib*.so.* | \
+awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`
+
+
+autotools_input := configure.in Makefile.am
+
+
+config-stamp:
+	cp -f $(patsubst %,debian/%,$(autotools_input)) .
+	${SHELL} ./debian/bootstrap
+# 	autoreconf --force --install
+	touch $@
+
+config.status: config-stamp
+	dh_testdir
+	CFLAGS="$(CFLAGS) -Wl,-z,defs" \
+	 ./configure --host=$(DEB_HOST_GNU_TYPE) \
+	 --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr \
+	 --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info
+
+build: build-stamp
+build-stamp:  config.status
+	dh_testdir
+	$(MAKE)
+# regression tests
+	./example
+	./tmt
+	./test_exc
+#
+	touch build-stamp
+
+autoclean:
+	-rm -f a.out aclocal.m4 config.log config.sub config.guess      \
+	  configure cryptopp_config.h.in depcomp install-sh ltmain.sh     \
+	  missing $(autotools_input)  config.h.in   Makefile.in \
+	  config.status libtool  mkinstalldirs #  config.h
+	-rm -r libltdl
+
+distclean: clean
+	-rm -r *stamp
+
+clean:autoclean
+	dh_testdir
+	dh_testroot
+	rm -f build-stamp config-stamp
+	-$(MAKE) -k distclean
+	-${RM} *.lo NEWS INSTALL *~
+	dh_clean 
+
+install: build
+	dh_testdir
+	dh_testroot
+	dh_clean -k 
+	dh_installdirs
+	$(MAKE) install prefix=$(CURDIR)/debian/tmp/usr
+
+
+binary-indep: build install
+
+
+binary-arch: build install
+	dh_testdir
+	dh_testroot
+	dh_movefiles
+	dh_installchangelogs ChangeLog
+	dh_installdocs
+	dh_installexamples
+	dh_install
+	dh_link
+	dh_strip
+	dh_compress
+	dh_fixperms
+	dh_makeshlibs
+	dh_installdeb
+	dh_shlibdeps
+	dh_gencontrol
+	dh_md5sums
+	dh_builddeb
+
+binary: binary-indep binary-arch
+.PHONY: build clean binary-indep binary-arch binary install 
+
+#eof "$Id: rules -- pcoval $"
--- newmat-1.10.4.orig/debian/copyright
+++ newmat-1.10.4/debian/copyright
@@ -0,0 +1,34 @@
+This package was debianized by Philippe Coval <rzr@users.sf.net> on
+Sat,  1 Apr 2006 12:08:38 +0200
+
+
+
+It was downloaded from <http://www.robertnz.net/>
+
+Copyright Holder: Robert Davies <robert[a]statsresearch.co.nz>
+
+I place no restrictions on the use of newmat except that I take
+no liability for any problems that may arise from its use,
+distribution or other dealings with it.
+
+You can use it in your commercial projects.
+
+You can make and distribute modified or merged versions. You can
+include parts of it in your own software.
+
+If you distribute modified or merged versions, please make it
+clear which parts are mine and which parts are modified.
+
+For a substantially modified version, simply note that it is,
+in part, derived from my software. A comment in the code will
+be sufficient.
+
+The software is provided "as is", without warranty of any kind.
+
+Please understand that there may still be bugs and errors.
+
+Use at your own risk. I (Robert Davies) take no responsibility
+for any errors or omissions in this package or for any misfortune
+that may befall you or others as a result of your use,
+distribution or other dealings with it.
+
--- newmat-1.10.4.orig/debian/docs
+++ newmat-1.10.4/debian/docs
@@ -0,0 +1 @@
+nm10.htm
--- newmat-1.10.4.orig/example.dsp
+++ newmat-1.10.4/example.dsp
@@ -0,0 +1,101 @@
+# Microsoft Developer Studio Project File - Name="example" - Package Owner=<4>
+# Microsoft Developer Studio Generated Build File, Format Version 6.00
+# Added By Philippe COVAL <rzr@users.sf.net>
+# ** DO NOT EDIT **
+
+# TARGTYPE "Win32 (x86) Console Application" 0x0103
+
+CFG=example - Win32 Debug
+!MESSAGE This is not a valid makefile. To build this project using NMAKE,
+!MESSAGE use the Export Makefile command and run
+!MESSAGE 
+!MESSAGE NMAKE /f "example.mak".
+!MESSAGE 
+!MESSAGE You can specify a configuration when running NMAKE
+!MESSAGE by defining the macro CFG on the command line. For example:
+!MESSAGE 
+!MESSAGE NMAKE /f "example.mak" CFG="example - Win32 Debug"
+!MESSAGE 
+!MESSAGE Possible choices for configuration are:
+!MESSAGE 
+!MESSAGE "example - Win32 Release" (based on "Win32 (x86) Console Application")
+!MESSAGE "example - Win32 Debug" (based on "Win32 (x86) Console Application")
+!MESSAGE 
+
+# Begin Project
+# PROP AllowPerConfigDependencies 0
+# PROP Scc_ProjName ""
+# PROP Scc_LocalPath ""
+CPP=cl.exe
+RSC=rc.exe
+
+!IF  "$(CFG)" == "example - Win32 Release"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 0
+# PROP BASE Output_Dir "Release"
+# PROP BASE Intermediate_Dir "Release"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 0
+# PROP Output_Dir "Release"
+# PROP Intermediate_Dir "Release"
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D "_MBCS" /YX /FD /c
+# ADD CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D "_MBCS" /YX /FD /c
+# ADD BASE RSC /l 0x40c /d "NDEBUG"
+# ADD RSC /l 0x40c /d "NDEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LINK32=link.exe
+# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /machine:I386
+# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /machine:I386
+
+!ELSEIF  "$(CFG)" == "example - Win32 Debug"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 1
+# PROP BASE Output_Dir "Debug"
+# PROP BASE Intermediate_Dir "Debug"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 1
+# PROP Output_Dir "Debug"
+# PROP Intermediate_Dir "Debug"
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "_MBCS" /YX /FD /GZ /c
+# ADD CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "_MBCS" /YX /FD /GZ /c
+# ADD BASE RSC /l 0x40c /d "_DEBUG"
+# ADD RSC /l 0x40c /d "_DEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LINK32=link.exe
+# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /debug /machine:I386 /pdbtype:sept
+# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /debug /machine:I386 /pdbtype:sept
+
+!ENDIF 
+
+# Begin Target
+
+# Name "example - Win32 Release"
+# Name "example - Win32 Debug"
+# Begin Group "Source Files"
+
+# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
+# Begin Source File
+
+SOURCE=.\example.cpp
+# End Source File
+# End Group
+# Begin Group "Header Files"
+
+# PROP Default_Filter "h;hpp;hxx;hm;inl"
+# End Group
+# Begin Group "Resource Files"
+
+# PROP Default_Filter "ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe"
+# End Group
+# End Target
+# End Project
--- newmat-1.10.4.orig/newmat.dsp
+++ newmat-1.10.4/newmat.dsp
@@ -0,0 +1,248 @@
+# Microsoft Developer Studio Project File - Name="newmat" - Package Owner=<4>
+# Microsoft Developer Studio Generated Build File, Format Version 6.00
+# Added By Philippe COVAL <rzr@users.sf.net>
+# ** DO NOT EDIT **
+# TARGTYPE "Win32 (x86) Static Library" 0x0104
+
+CFG=newmat - Win32 Debug
+!MESSAGE This is not a valid makefile. To build this project using NMAKE,
+!MESSAGE use the Export Makefile command and run
+!MESSAGE 
+!MESSAGE NMAKE /f "newmat.mak".
+!MESSAGE 
+!MESSAGE You can specify a configuration when running NMAKE
+!MESSAGE by defining the macro CFG on the command line. For example:
+!MESSAGE 
+!MESSAGE NMAKE /f "newmat.mak" CFG="newmat - Win32 Debug"
+!MESSAGE 
+!MESSAGE Possible choices for configuration are:
+!MESSAGE 
+!MESSAGE "newmat - Win32 Release" (based on "Win32 (x86) Static Library")
+!MESSAGE "newmat - Win32 Debug" (based on "Win32 (x86) Static Library")
+!MESSAGE 
+
+# Begin Project
+# PROP AllowPerConfigDependencies 0
+# PROP Scc_ProjName ""
+# PROP Scc_LocalPath ""
+CPP=cl.exe
+RSC=rc.exe
+
+!IF  "$(CFG)" == "newmat - Win32 Release"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 0
+# PROP BASE Output_Dir "Release"
+# PROP BASE Intermediate_Dir "Release"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 0
+# PROP Output_Dir "Release"
+# PROP Intermediate_Dir "Release"
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /YX /FD /c
+# ADD CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /YX /FD /c
+# ADD BASE RSC /l 0x40c /d "NDEBUG"
+# ADD RSC /l 0x40c /d "NDEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LIB32=link.exe -lib
+# ADD BASE LIB32 /nologo
+# ADD LIB32 /nologo
+
+!ELSEIF  "$(CFG)" == "newmat - Win32 Debug"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 1
+# PROP BASE Output_Dir "Debug"
+# PROP BASE Intermediate_Dir "Debug"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 1
+# PROP Output_Dir "Debug"
+# PROP Intermediate_Dir "Debug"
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /GZ /c
+# ADD CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /FR /YX /FD /GZ /c
+# ADD BASE RSC /l 0x40c /d "_DEBUG"
+# ADD RSC /l 0x40c /d "_DEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LIB32=link.exe -lib
+# ADD BASE LIB32 /nologo
+# ADD LIB32 /nologo
+
+!ENDIF 
+
+# Begin Target
+
+# Name "newmat - Win32 Release"
+# Name "newmat - Win32 Debug"
+# Begin Group "Source Files"
+
+# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
+# Begin Source File
+
+SOURCE=.\bandmat.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\cholesky.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\evalue.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\fft.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\hholder.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\jacobi.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\myexcept.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newfft.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat1.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat2.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat3.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat4.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat5.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat6.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat7.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat8.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat9.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmatex.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmatnl.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmatrm.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\solution.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\sort.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\submat.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\svd.cpp
+# End Source File
+# End Group
+# Begin Group "Header Files"
+
+# PROP Default_Filter "h;hpp;hxx;hm;inl"
+# Begin Source File
+
+SOURCE=.\boolean.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\controlw.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\include.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\myexcept.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmat.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmatap.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmatio.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmatnl.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmatrc.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\newmatrm.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\precisio.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\solution.h
+# End Source File
+# End Group
+# Begin Source File
+
+SOURCE=.\nm10.htm
+# End Source File
+# Begin Source File
+
+SOURCE=.\readme
+# End Source File
+# End Target
+# End Project
--- newmat-1.10.4.orig/newmat.dsw
+++ newmat-1.10.4/newmat.dsw
@@ -0,0 +1,45 @@
+Microsoft Developer Studio Workspace File, Format Version 6.00
+# Added By Philippe COVAL <rzr@users.sf.net>
+# WARNING: DO NOT EDIT OR DELETE THIS WORKSPACE FILE!
+
+###############################################################################
+
+Project: "example"=".\example.dsp" - Package Owner=<4>
+
+Package=<5>
+{{{
+}}}
+
+Package=<4>
+{{{
+    Begin Project Dependency
+    Project_Dep_Name newmat
+    End Project Dependency
+}}}
+
+###############################################################################
+
+Project: "newmat"=".\newmat.dsp" - Package Owner=<4>
+
+Package=<5>
+{{{
+}}}
+
+Package=<4>
+{{{
+}}}
+
+###############################################################################
+
+Global:
+
+Package=<5>
+{{{
+}}}
+
+Package=<3>
+{{{
+}}}
+
+###############################################################################
+
--- newmat-1.10.4.orig/ChangeLog
+++ newmat-1.10.4/ChangeLog
@@ -0,0 +1,12 @@
+Version 10C makes the conditions of use compatible with Debian
+distribution, replaces include.h, myexcept.h, myexcept.cpp, precisio.h
+with recent versions, includes additional make files and makes a
+few minor corrections. 
+
+Version 10B corrects incompatibilities with Gnu G++ version 3.4 and
+Intel C++ for Windows, 8.1. Include.h, myexcept.h, myexcept.cpp,
+precisio.h are replaced with recent versions.
+
+Version 10A corrects an error on the Kronecker production function and
+you can now run Gnu G++ version 3 and Intel for Linux without making
+any modifications.
