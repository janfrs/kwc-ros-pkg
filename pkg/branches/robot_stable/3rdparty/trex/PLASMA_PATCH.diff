Index: PLASMA/src/PLASMA/PlanDatabase/base/UnifyMemento.cc
===================================================================
--- PLASMA/src/PLASMA/PlanDatabase/base/UnifyMemento.cc	(revision 5117)
+++ PLASMA/src/PLASMA/PlanDatabase/base/UnifyMemento.cc	(working copy)
@@ -1,5 +1,6 @@
 #include "Id.hh"
 #include "UnifyMemento.hh"
+#include "string.h"
 
 namespace EUROPA {
   
Index: PLASMA/src/PLASMA/NDDL/component/Interpreter.cc
===================================================================
--- PLASMA/src/PLASMA/NDDL/component/Interpreter.cc	(revision 5117)
+++ PLASMA/src/PLASMA/NDDL/component/Interpreter.cc	(working copy)
@@ -24,6 +24,8 @@
 #include "NddlRules.hh"
 #include "NddlUtils.hh"
 
+#include <string.h>
+
 // Hack!! the macro in NddlRules.hh only works with code-generation
 // so this is redefined here. this is brittle though
 // TODO: change code-generation code to work with this macro instead
Index: PLASMA/src/PLASMA/Resource/component/SAVH_MaxFlow.hh
===================================================================
--- PLASMA/src/PLASMA/Resource/component/SAVH_MaxFlow.hh	(revision 5117)
+++ PLASMA/src/PLASMA/Resource/component/SAVH_MaxFlow.hh	(working copy)
@@ -15,6 +15,13 @@
 #include "SAVH_NodeIterator.hh"
 #include "SAVH_EdgeIterator.hh"
 
+#ifndef LONG_MAX
+// Would prefer to declare a static const variable, but that would be
+// bad style inside a header, so there's another 'ifndef LONG_MAX'
+// inside MaximumFlowAlgorithm::reLabel().
+# include <limits>
+#endif
+
 namespace EUROPA 
 {
   namespace SAVH 
@@ -433,7 +440,13 @@
       graphDebug("Relabel node "
           << *n );
 
+      // Would be better to use std::numeric_limits<> all the time but
+      // maybe not all compilers support it.
+#ifndef LONG_MAX
+      long minLabel = std::numeric_limits<long>::max();
+#else
       long minLabel = LONG_MAX;
+#endif
 
       EdgeOutIterator edgeOutIte( *n );
 
Index: PLASMA/src/PLASMA/Utils/base/LabelStr.hh
===================================================================
--- PLASMA/src/PLASMA/Utils/base/LabelStr.hh	(revision 5117)
+++ PLASMA/src/PLASMA/Utils/base/LabelStr.hh	(working copy)
@@ -13,10 +13,16 @@
 #include <map>
 #include <string>
 #include <ext/hash_map>
+
+// Come on you GCC guys...
 #if (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
-#include <ext/hash_fun.h>
+# if (__GNUC__ == 4 && __GNUC_MINOR__ >= 3)
+#  include <backward/hash_fun.h>
+# else
+#  include <ext/hash_fun.h>
+# endif
 #else
-#include <ext/stl_hash_fun.h>
+# include <ext/stl_hash_fun.h>
 #endif
 
 namespace __gnu_cxx {
Index: PLASMA/src/PLASMA/ConstraintEngine/base/ConstraintEngine.cc
===================================================================
--- PLASMA/src/PLASMA/ConstraintEngine/base/ConstraintEngine.cc	(revision 5117)
+++ PLASMA/src/PLASMA/ConstraintEngine/base/ConstraintEngine.cc	(working copy)
@@ -13,6 +13,10 @@
 #include <string>
 #include <iterator>
 
+#ifndef INT_MAX
+static int const INT_MAX(std::numeric_limits<int>::max());
+#endif
+
 namespace EUROPA
 {
 
